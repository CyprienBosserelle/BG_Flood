<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="ReadInput_8h" kind="file" language="C++">
    <compoundname>ReadInput.h</compoundname>
    <includes refid="General_8h" local="yes">General.h</includes>
    <includes refid="Param_8h" local="yes">Param.h</includes>
    <includes refid="Write__txtlog_8h" local="yes">Write_txtlog.h</includes>
    <includes refid="Forcing_8h" local="yes">Forcing.h</includes>
    <includes refid="Util__CPU_8h" local="yes">Util_CPU.h</includes>
    <includes refid="utctime_8h" local="yes">utctime.h</includes>
    <includes refid="Input_8h" local="yes">Input.h</includes>
    <includes refid="ReadForcing_8h" local="yes">ReadForcing.h</includes>
    <includedby refid="BG__Flood_8h" local="yes">src/BG_Flood.h</includedby>
    <includedby refid="ReadInput_8cu" local="yes">src/ReadInput.cu</includedby>
    <includedby refid="Read__netcdf_8h" local="yes">src/Read_netcdf.h</includedby>
    <includedby refid="Testing_8h" local="yes">src/Testing.h</includedby>
    <includedby refid="Write__netcdf_8h" local="yes">src/Write_netcdf.h</includedby>
    <includedby refid="utctime_8h" local="yes">src/utctime.h</includedby>
    <incdepgraph>
      <node id="32">
        <label>Arrays.h</label>
        <link refid="Arrays_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>Boundary.h</label>
        <link refid="Boundary_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>ConserveElevation.h</label>
        <link refid="ConserveElevation_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>Forcing.h</label>
        <link refid="Forcing_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>General.h</label>
        <link refid="General_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>Gradients.h</label>
        <link refid="Gradients_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>GridManip.h</label>
        <link refid="GridManip_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>Halo.h</label>
        <link refid="Halo_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>InitEvolv.h</label>
        <link refid="InitEvolv_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>InitialConditions.h</label>
        <link refid="InitialConditions_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>Input.h</label>
        <link refid="Input_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>Kurganov.h</label>
        <link refid="Kurganov_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>MemManagement.h</label>
        <link refid="MemManagement_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>Mesh.h</label>
        <link refid="Mesh_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>Param.h</label>
        <link refid="Param_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>Poly.h</label>
        <link refid="Poly_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>ReadForcing.h</label>
        <link refid="ReadForcing_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/ReadInput.h</label>
        <link refid="ReadInput_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>Read_netcdf.h</label>
        <link refid="Read__netcdf_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>Setup_GPU.h</label>
        <link refid="Setup__GPU_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>Spherical.h</label>
        <link refid="Spherical_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>Updateforcing.h</label>
        <link refid="Updateforcing_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>Util_CPU.h</label>
        <link refid="Util__CPU_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>Write_netcdf.h</label>
        <link refid="Write__netcdf_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>Write_txtlog.h</label>
        <link refid="Write__txtlog_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>utctime.h</label>
        <link refid="utctime_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>algorithm</label>
      </node>
      <node id="9">
        <label>chrono</label>
      </node>
      <node id="8">
        <label>cmath</label>
      </node>
      <node id="10">
        <label>ctime</label>
      </node>
      <node id="3">
        <label>cuda_runtime.h</label>
      </node>
      <node id="4">
        <label>device_launch_parameters.h</label>
      </node>
      <node id="18">
        <label>fstream</label>
      </node>
      <node id="17">
        <label>iomanip</label>
      </node>
      <node id="16">
        <label>iostream</label>
      </node>
      <node id="20">
        <label>limits</label>
      </node>
      <node id="13">
        <label>map</label>
      </node>
      <node id="7">
        <label>math.h</label>
      </node>
      <node id="14">
        <label>netcdf.h</label>
      </node>
      <node id="19">
        <label>sstream</label>
      </node>
      <node id="5">
        <label>stdio.h</label>
      </node>
      <node id="6">
        <label>stdlib.h</label>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="21">
        <label>thread</label>
      </node>
      <node id="12">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="19">
        <label>src/AdaptCriteria.h</label>
        <link refid="AdaptCriteria_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/Adaptation.h</label>
        <link refid="Adaptation_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>src/Advection.h</label>
        <link refid="Advection_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/BG_Flood.h</label>
        <link refid="BG__Flood_8h_source"/>
      </node>
      <node id="17">
        <label>src/Boundary.h</label>
        <link refid="Boundary_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>src/ConserveElevation.h</label>
        <link refid="ConserveElevation_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>src/FlowCPU.h</label>
        <link refid="FlowCPU_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>src/FlowGPU.h</label>
        <link refid="FlowGPU_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>src/FlowMLGPU.h</label>
        <link refid="FlowMLGPU_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>src/Friction.h</label>
        <link refid="Friction_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>src/Gradients.h</label>
        <link refid="Gradients_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>src/GridManip.h</label>
        <link refid="GridManip_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>src/Halo.h</label>
        <link refid="Halo_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/InitEvolv.h</label>
        <link refid="InitEvolv_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>src/InitialConditions.h</label>
        <link refid="InitialConditions_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>src/Kurganov.h</label>
        <link refid="Kurganov_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/Mainloop.h</label>
        <link refid="Mainloop_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>src/Meanmax.h</label>
        <link refid="Meanmax_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>src/MemManagement.h</label>
        <link refid="MemManagement_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>src/Mesh.h</label>
        <link refid="Mesh_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>src/Multilayer.h</label>
        <link refid="Multilayer_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>src/Poly.h</label>
        <link refid="Poly_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>src/ReadForcing.h</label>
        <link refid="ReadForcing_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/ReadInput.h</label>
        <link refid="ReadInput_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/Read_netcdf.h</label>
        <link refid="Read__netcdf_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>src/Reimann.h</label>
        <link refid="Reimann_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>src/Setup_GPU.h</label>
        <link refid="Setup__GPU_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>src/Spherical.h</label>
        <link refid="Spherical_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/Testing.h</label>
        <link refid="Testing_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>src/Updateforcing.h</label>
        <link refid="Updateforcing_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>src/Write_netcdf.h</label>
        <link refid="Write__netcdf_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>src/utctime.h</label>
        <link refid="utctime_8h_source"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="ReadInput_8h_1a4fd3d44799253e60792d8adf2c54a601" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T readfileinfo</definition>
        <argsstring>(std::string input, T outinfo)</argsstring>
        <name>readfileinfo</name>
        <param>
          <type>std::string</type>
          <declname>input</declname>
        </param>
        <param>
          <type>T</type>
          <declname>outinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert file name into name and extension This is used for various input classes</para>
<para>template inputmap readfileinfo&lt;inputmap&gt;(std::string input, inputmap outinfo); template forcingmap readfileinfo&lt;forcingmap&gt;(std::string input, forcingmap outinfo); template StaticForcingP&lt;float&gt; readfileinfo&lt;StaticForcingP&lt;float&gt;&gt;(std::string input, StaticForcingP&lt;float&gt; outinfo); template <ref refid="structDynForcingP" kindref="compound">DynForcingP&lt;float&gt;</ref> readfileinfo&lt;DynForcingP&lt;float&gt;&gt;(std::string input, DynForcingP&lt;float&gt; outinfo); template deformmap&lt;float&gt; readfileinfo&lt;deformmap&lt;float&gt;&gt;(std::string input, deformmap&lt;float&gt; outinfo); </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ReadInput.h" line="15" column="15" bodyfile="src/ReadInput.cu" bodystart="33" bodyend="66" declfile="src/ReadInput.h" declline="15" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="ReadInput_8h_1af8275cea8c05e6da8e4b0e5d32881e3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Readparamfile</definition>
        <argsstring>(Param &amp;XParam, Forcing&lt; float &gt; &amp;XForcing, std::string Paramfile)</argsstring>
        <name>Readparamfile</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref> &amp;</type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structForcing" kindref="compound">Forcing</ref>&lt; float &gt; &amp;</type>
          <declname>XForcing</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>Paramfile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ReadInput.h" line="17" column="6" bodyfile="src/ReadInput.cu" bodystart="81" bodyend="118" declfile="src/ReadInput.h" declline="17" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ReadInput_8h_1aade14ba4777ed9bfee8541774d76e8ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structForcing" kindref="compound">Forcing</ref>&lt; T &gt;</type>
        <definition>Forcing&lt; T &gt; readparamstr</definition>
        <argsstring>(std::string line, Forcing&lt; T &gt; forcing)</argsstring>
        <name>readparamstr</name>
        <param>
          <type>std::string</type>
          <declname>line</declname>
        </param>
        <param>
          <type><ref refid="structForcing" kindref="compound">Forcing</ref>&lt; T &gt;</type>
          <declname>forcing</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read BG_param.txt line and convert parameter to the righ parameter in the class return an updated <ref refid="classParam" kindref="compound">Param</ref> class </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ReadInput.h" line="19" column="21" bodyfile="src/ReadInput.cu" bodystart="848" bodyend="1161" declfile="src/ReadInput.h" declline="19" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="ReadInput_8h_1a6c704f8d8527eecd6c4f1e0f253186f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classParam" kindref="compound">Param</ref></type>
        <definition>Param readparamstr</definition>
        <argsstring>(std::string line, Param param)</argsstring>
        <name>readparamstr</name>
        <param>
          <type>std::string</type>
          <declname>line</declname>
        </param>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read BG_param.txt line and convert parameter to the righ parameter in the class retrun an updated <ref refid="classParam" kindref="compound">Param</ref> class </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ReadInput.h" line="21" column="7" bodyfile="src/ReadInput.cu" bodystart="128" bodyend="839" declfile="src/ReadInput.h" declline="21" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="ReadInput_8h_1ab913afa4b352bb9875bb4ec72521a193" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void checkparamsanity</definition>
        <argsstring>(Param &amp;XParam, Forcing&lt; float &gt; &amp;XForcing)</argsstring>
        <name>checkparamsanity</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref> &amp;</type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structForcing" kindref="compound">Forcing</ref>&lt; float &gt; &amp;</type>
          <declname>XForcing</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check the Sanity of both <ref refid="classParam" kindref="compound">Param</ref> and <ref refid="structForcing" kindref="compound">Forcing</ref> class If required some parameter are infered </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ReadInput.h" line="24" column="6" bodyfile="src/ReadInput.cu" bodystart="1168" bodyend="1578" declfile="src/ReadInput.h" declline="24" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ReadInput_8h_1a16f53b241a2b708361e002670df091e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double setendtime</definition>
        <argsstring>(Param XParam, Forcing&lt; float &gt; XForcing)</argsstring>
        <name>setendtime</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structForcing" kindref="compound">Forcing</ref>&lt; float &gt;</type>
          <declname>XForcing</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate/modify endtime based on maximum time in forcing </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ReadInput.h" line="25" column="8" bodyfile="src/ReadInput.cu" bodystart="1604" bodyend="1637" declfile="src/ReadInput.h" declline="25" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="ReadInput_8h_1a83b6362c0cf581af5b84e8040200857d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string findparameter</definition>
        <argsstring>(std::vector&lt; std::string &gt; parameterstr, std::string line)</argsstring>
        <name>findparameter</name>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>parameterstr</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ReadInput.h" line="26" column="13" bodyfile="src/ReadInput.cu" bodystart="1643" bodyend="1688" declfile="src/ReadInput.h" declline="26" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="ReadInput_8h_1a9b6b9f9b26d90d1c1b4dfe173be57e1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string findparameter</definition>
        <argsstring>(std::string parameterstr, std::string line)</argsstring>
        <name>findparameter</name>
        <param>
          <type>std::string</type>
          <declname>parameterstr</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>separate parameter from value </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ReadInput.h" line="27" column="13" bodyfile="src/ReadInput.cu" bodystart="1691" bodyend="1697" declfile="src/ReadInput.h" declline="27" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="ReadInput_8h_1a7fdeaad11fab6949d565928655753fe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void split</definition>
        <argsstring>(const std::string &amp;s, char delim, std::vector&lt; std::string &gt; &amp;elems)</argsstring>
        <name>split</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>char</type>
          <declname>delim</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>elems</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>split string based in character </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ReadInput.h" line="28" column="6" bodyfile="src/ReadInput.cu" bodystart="1704" bodyend="1715" declfile="src/ReadInput.h" declline="28" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ReadInput_8h_1a0711bc625a1e6944ca62107b5847365f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; split</definition>
        <argsstring>(const std::string &amp;s, char delim)</argsstring>
        <name>split</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>char</type>
          <declname>delim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>split string based in character </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ReadInput.h" line="29" column="13" bodyfile="src/ReadInput.cu" bodystart="1721" bodyend="1725" declfile="src/ReadInput.h" declline="29" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="ReadInput_8h_1a3bb2a577745ebc9687192e9ffe232805" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void split_full</definition>
        <argsstring>(const std::string &amp;s, char delim, std::vector&lt; std::string &gt; &amp;elems)</argsstring>
        <name>split_full</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>char</type>
          <declname>delim</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>elems</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>split string based in character, conserving empty item </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ReadInput.h" line="30" column="6" bodyfile="src/ReadInput.cu" bodystart="1733" bodyend="1747" declfile="src/ReadInput.h" declline="30" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ReadInput_8h_1ae6af0198258d1543ed6fbc7b33da3010" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; split_full</definition>
        <argsstring>(const std::string &amp;s, char delim)</argsstring>
        <name>split_full</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>char</type>
          <declname>delim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>split string based in character, conserving empty items </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ReadInput.h" line="31" column="13" bodyfile="src/ReadInput.cu" bodystart="1753" bodyend="1757" declfile="src/ReadInput.h" declline="31" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="ReadInput_8h_1a2c2ca91bf22e464ce6e5ea21477e4462" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; split</definition>
        <argsstring>(const std::string s, const std::string delim)</argsstring>
        <name>split</name>
        <param>
          <type>const std::string</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>delim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ReadInput.h" line="32" column="13" bodyfile="src/ReadInput.cu" bodystart="1760" bodyend="1793" declfile="src/ReadInput.h" declline="32" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="ReadInput_8h_1a61bb9a4530ff40c81495172a56719e36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string trim</definition>
        <argsstring>(const std::string &amp;str, const std::string &amp;whitespace)</argsstring>
        <name>trim</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>whitespace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>remove leading and trailing space in a string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ReadInput.h" line="33" column="13" bodyfile="src/ReadInput.cu" bodystart="1800" bodyend="1810" declfile="src/ReadInput.h" declline="33" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="ReadInput_8h_1aa1d5d87b815650c5b765af942c77f93e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t case_insensitive_compare</definition>
        <argsstring>(std::string s1, std::string s2)</argsstring>
        <name>case_insensitive_compare</name>
        <param>
          <type>std::string</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ReadInput.h" line="34" column="13" bodyfile="src/ReadInput.cu" bodystart="1816" bodyend="1823" declfile="src/ReadInput.h" declline="34" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="ReadInput_8h_1a56048a1bd60d79cb6a8dca48c33ce51f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t case_insensitive_compare</definition>
        <argsstring>(std::string s1, std::vector&lt; std::string &gt; vecstr)</argsstring>
        <name>case_insensitive_compare</name>
        <param>
          <type>std::string</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>vecstr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ReadInput.h" line="35" column="13" bodyfile="src/ReadInput.cu" bodystart="1825" bodyend="1838" declfile="src/ReadInput.h" declline="35" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="ReadInput_8h_1a769a0adefc87a67894d130f070e87a2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool readparambool</definition>
        <argsstring>(std::string paramstr, bool defaultval)</argsstring>
        <name>readparambool</name>
        <param>
          <type>std::string</type>
          <declname>paramstr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>defaultval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ReadInput.h" line="36" column="6" bodyfile="src/ReadInput.cu" bodystart="1951" bodyend="1967" declfile="src/ReadInput.h" declline="36" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ReadInput_8h_1ad04a1b1a00d15ecabb4c70df90f33b18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InitialiseToutput</definition>
        <argsstring>(T_output &amp;Toutput, Param XParam)</argsstring>
        <name>InitialiseToutput</name>
        <param>
          <type><ref refid="classT__output" kindref="compound">T_output</ref> &amp;</type>
          <declname>Toutput</declname>
        </param>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ReadInput.h" line="37" column="6" bodyfile="src/ReadInput.cu" bodystart="1581" bodyend="1598" declfile="src/ReadInput.h" declline="37" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ReadInput_8h_1a85689aa928d7756ee19d30e163a334f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbndsegment" kindref="compound">bndsegment</ref></type>
        <definition>bndsegment readbndline</definition>
        <argsstring>(std::string parametervalue)</argsstring>
        <name>readbndline</name>
        <param>
          <type>std::string</type>
          <declname>parametervalue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ReadInput.h" line="38" column="12" bodyfile="src/ReadInput.cu" bodystart="1897" bodyend="1947" declfile="src/ReadInput.h" declline="38" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="ReadInput_8h_1a8251ca5f794b80f4fddf1159688f99e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classbndsegment" kindref="compound">bndsegment</ref></type>
        <definition>bndsegment readbndlineside</definition>
        <argsstring>(std::string parametervalue, std::string side)</argsstring>
        <name>readbndlineside</name>
        <param>
          <type>std::string</type>
          <declname>parametervalue</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>side</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ReadInput.h" line="39" column="12" bodyfile="src/ReadInput.cu" bodystart="1841" bodyend="1894" declfile="src/ReadInput.h" declline="39" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="ReadInput_8h_1afc9c1571349c5d599347eee5b80e15fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; ReadToutput</definition>
        <argsstring>(std::vector&lt; std::string &gt; paramstr, Param XParam)</argsstring>
        <name>ReadToutput</name>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>paramstr</declname>
        </param>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ReadInput.h" line="42" column="13" bodyfile="src/ReadInput.cu" bodystart="2143" bodyend="2185" declfile="src/ReadInput.h" declline="42" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="ReadInput_8h_1a8bc98a36fb09cc9317236c62d7bd8968" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; ReadToutSTR</definition>
        <argsstring>(std::string paramstr)</argsstring>
        <name>ReadToutSTR</name>
        <param>
          <type>std::string</type>
          <declname>paramstr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ReadInput.h" line="44" column="13" bodyfile="src/ReadInput.cu" bodystart="1978" bodyend="1983" declfile="src/ReadInput.h" declline="44" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="ReadInput_8h_1a446b06623deadaba4e4569c0ca0df865" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ReadTvalstr</definition>
        <argsstring>(std::string timestr, double start, double end, std::string reftime)</argsstring>
        <name>ReadTvalstr</name>
        <param>
          <type>std::string</type>
          <declname>timestr</declname>
        </param>
        <param>
          <type>double</type>
          <declname>start</declname>
        </param>
        <param>
          <type>double</type>
          <declname>end</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>reftime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ReadInput.h" line="45" column="8" bodyfile="src/ReadInput.cu" bodystart="1986" bodyend="2013" declfile="src/ReadInput.h" declline="45" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="ReadInput_8h_1aaa5f4a338eaf18e39f17e40c50a56fa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; ReadTRangestr</definition>
        <argsstring>(std::vector&lt; std::string &gt; timestr, double start, double end, std::string reftime)</argsstring>
        <name>ReadTRangestr</name>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>timestr</declname>
        </param>
        <param>
          <type>double</type>
          <declname>start</declname>
        </param>
        <param>
          <type>double</type>
          <declname>end</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>reftime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ReadInput.h" line="46" column="13" bodyfile="src/ReadInput.cu" bodystart="2015" bodyend="2080" declfile="src/ReadInput.h" declline="46" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="ReadInput_8h_1a6815c049735d6d8a741ef3c2fa257f23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double readApproxtimestr</definition>
        <argsstring>(std::string input)</argsstring>
        <name>readApproxtimestr</name>
        <param>
          <type>std::string</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ReadInput.h" line="47" column="8" bodyfile="src/ReadInput.cu" bodystart="2083" bodyend="2140" declfile="src/ReadInput.h" declline="47" declcolumn="8"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>READINPUT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>READINPUT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;General.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Param.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Write_txtlog.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Forcing.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Util_CPU.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;utctime.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Input.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ReadForcing.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>T<sp/>readfileinfo(std::string<sp/>input,<sp/>T<sp/>outinfo);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Readparamfile(<ref refid="classParam" kindref="compound">Param</ref>&amp;<sp/>XParam,<sp/><ref refid="structForcing" kindref="compound">Forcing&lt;float&gt;</ref>&amp;<sp/>XForcing,<sp/>std::string<sp/>Paramfile);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/><ref refid="structForcing" kindref="compound">Forcing&lt;T&gt;</ref><sp/>readparamstr(std::string<sp/>line,<sp/><ref refid="structForcing" kindref="compound">Forcing&lt;T&gt;</ref><sp/>forcing);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><ref refid="classParam" kindref="compound">Param</ref><sp/>readparamstr(std::string<sp/>line,<sp/><ref refid="classParam" kindref="compound">Param</ref><sp/>param);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<ref refid="structForcing" kindref="compound">Forcing&lt;T&gt;</ref><sp/>readparamstr(std::string<sp/>line,<sp/><ref refid="structForcing" kindref="compound">Forcing&lt;T&gt;</ref><sp/>forcing);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkparamsanity(<ref refid="classParam" kindref="compound">Param</ref>&amp;<sp/>XParam,<sp/><ref refid="structForcing" kindref="compound">Forcing&lt;float&gt;</ref>&amp;<sp/>XForcing);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>setendtime(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structForcing" kindref="compound">Forcing&lt;float&gt;</ref><sp/>XForcing);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">std::string<sp/>findparameter(std::vector&lt;std::string&gt;<sp/>parameterstr,<sp/>std::string<sp/>line);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">std::string<sp/>findparameter(std::string<sp/>parameterstr,<sp/>std::string<sp/>line);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>split(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>delim,<sp/>std::vector&lt;std::string&gt;&amp;<sp/>elems);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">std::vector&lt;std::string&gt;<sp/>split(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>delim);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>split_full(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>delim,<sp/>std::vector&lt;std::string&gt;&amp;<sp/>elems);</highlight></codeline>
<codeline lineno="31"><highlight class="normal">std::vector&lt;std::string&gt;<sp/>split_full(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>delim);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">std::vector&lt;std::string&gt;<sp/>split(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>delim);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">std::string<sp/>trim(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>whitespace);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">std::size_t<sp/>case_insensitive_compare(std::string<sp/>s1,<sp/>std::string<sp/>s2);</highlight></codeline>
<codeline lineno="35"><highlight class="normal">std::size_t<sp/>case_insensitive_compare(std::string<sp/>s1,<sp/>std::vector&lt;std::string&gt;<sp/>vecstr);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>readparambool(std::string<sp/>paramstr,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>defaultval);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InitialiseToutput(<ref refid="classT__output" kindref="compound">T_output</ref>&amp;<sp/>Toutput,<sp/><ref refid="classParam" kindref="compound">Param</ref><sp/>XParam);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><ref refid="classbndsegment" kindref="compound">bndsegment</ref><sp/>readbndline(std::string<sp/>parametervalue);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="classbndsegment" kindref="compound">bndsegment</ref><sp/>readbndlineside(std::string<sp/>parametervalue,<sp/>std::string<sp/>side);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//T_output<sp/>ReadToutput(std::vector&lt;std::string&gt;<sp/>paramstr,<sp/>Param<sp/>XParam);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">std::vector&lt;double&gt;<sp/>ReadToutput(std::vector&lt;std::string&gt;<sp/>paramstr,<sp/><ref refid="classParam" kindref="compound">Param</ref><sp/>XParam);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">std::vector&lt;std::string&gt;<sp/>ReadToutSTR(std::string<sp/>paramstr);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ReadTvalstr(std::string<sp/>timestr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>end,<sp/>std::string<sp/>reftime);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">std::vector&lt;double&gt;<sp/>ReadTRangestr(std::vector&lt;std::string&gt;<sp/>timestr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>end,<sp/>std::string<sp/>reftime);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>readApproxtimestr(std::string<sp/>input);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//inline<sp/>bool<sp/>fileexists(const<sp/>std::string&amp;<sp/>name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>End<sp/>of<sp/>global<sp/>definition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/ReadInput.h"/>
  </compounddef>
</doxygen>
