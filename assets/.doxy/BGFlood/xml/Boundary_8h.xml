<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="Boundary_8h" kind="file" language="C++">
    <compoundname>Boundary.h</compoundname>
    <includes refid="General_8h" local="yes">General.h</includes>
    <includes refid="MemManagement_8h" local="yes">MemManagement.h</includes>
    <includes refid="Util__CPU_8h" local="yes">Util_CPU.h</includes>
    <includes refid="Updateforcing_8h" local="yes">Updateforcing.h</includes>
    <includedby refid="Boundary_8cu" local="yes">src/Boundary.cu</includedby>
    <includedby refid="FlowGPU_8h" local="yes">src/FlowGPU.h</includedby>
    <includedby refid="Halo_8h" local="yes">src/Halo.h</includedby>
    <includedby refid="Mainloop_8h" local="yes">src/Mainloop.h</includedby>
    <incdepgraph>
      <node id="25">
        <label>Arrays.h</label>
        <link refid="Arrays_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/Boundary.h</label>
        <link refid="Boundary_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>ConserveElevation.h</label>
        <link refid="ConserveElevation_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>Forcing.h</label>
        <link refid="Forcing_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>General.h</label>
        <link refid="General_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>Gradients.h</label>
        <link refid="Gradients_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>GridManip.h</label>
        <link refid="GridManip_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>Halo.h</label>
        <link refid="Halo_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>InitEvolv.h</label>
        <link refid="InitEvolv_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>InitialConditions.h</label>
        <link refid="InitialConditions_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>Input.h</label>
        <link refid="Input_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>Kurganov.h</label>
        <link refid="Kurganov_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>MemManagement.h</label>
        <link refid="MemManagement_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>Mesh.h</label>
        <link refid="Mesh_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>Param.h</label>
        <link refid="Param_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>Poly.h</label>
        <link refid="Poly_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>ReadForcing.h</label>
        <link refid="ReadForcing_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>ReadInput.h</label>
        <link refid="ReadInput_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>Read_netcdf.h</label>
        <link refid="Read__netcdf_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>Setup_GPU.h</label>
        <link refid="Setup__GPU_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>Spherical.h</label>
        <link refid="Spherical_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>Updateforcing.h</label>
        <link refid="Updateforcing_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>Util_CPU.h</label>
        <link refid="Util__CPU_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>Write_netcdf.h</label>
        <link refid="Write__netcdf_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>Write_txtlog.h</label>
        <link refid="Write__txtlog_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>utctime.h</label>
        <link refid="utctime_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>algorithm</label>
      </node>
      <node id="9">
        <label>chrono</label>
      </node>
      <node id="8">
        <label>cmath</label>
      </node>
      <node id="10">
        <label>ctime</label>
      </node>
      <node id="3">
        <label>cuda_runtime.h</label>
      </node>
      <node id="4">
        <label>device_launch_parameters.h</label>
      </node>
      <node id="18">
        <label>fstream</label>
      </node>
      <node id="17">
        <label>iomanip</label>
      </node>
      <node id="16">
        <label>iostream</label>
      </node>
      <node id="20">
        <label>limits</label>
      </node>
      <node id="13">
        <label>map</label>
      </node>
      <node id="7">
        <label>math.h</label>
      </node>
      <node id="14">
        <label>netcdf.h</label>
      </node>
      <node id="19">
        <label>sstream</label>
      </node>
      <node id="5">
        <label>stdio.h</label>
      </node>
      <node id="6">
        <label>stdlib.h</label>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="21">
        <label>thread</label>
      </node>
      <node id="12">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="10">
        <label>src/AdaptCriteria.h</label>
        <link refid="AdaptCriteria_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/Adaptation.h</label>
        <link refid="Adaptation_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>src/Advection.h</label>
        <link refid="Advection_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>src/BG_Flood.h</label>
        <link refid="BG__Flood_8h_source"/>
      </node>
      <node id="1">
        <label>src/Boundary.h</label>
        <link refid="Boundary_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>src/ConserveElevation.h</label>
        <link refid="ConserveElevation_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>src/FlowCPU.h</label>
        <link refid="FlowCPU_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/FlowGPU.h</label>
        <link refid="FlowGPU_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/FlowMLGPU.h</label>
        <link refid="FlowMLGPU_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>src/Friction.h</label>
        <link refid="Friction_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>src/Gradients.h</label>
        <link refid="Gradients_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>src/GridManip.h</label>
        <link refid="GridManip_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>src/Halo.h</label>
        <link refid="Halo_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>src/InitEvolv.h</label>
        <link refid="InitEvolv_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>src/InitialConditions.h</label>
        <link refid="InitialConditions_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>src/Kurganov.h</label>
        <link refid="Kurganov_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/Mainloop.h</label>
        <link refid="Mainloop_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/Meanmax.h</label>
        <link refid="Meanmax_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>src/MemManagement.h</label>
        <link refid="MemManagement_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>src/Mesh.h</label>
        <link refid="Mesh_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>src/Multilayer.h</label>
        <link refid="Multilayer_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>src/Poly.h</label>
        <link refid="Poly_8h_source"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>src/ReadForcing.h</label>
        <link refid="ReadForcing_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>src/ReadInput.h</label>
        <link refid="ReadInput_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>src/Read_netcdf.h</label>
        <link refid="Read__netcdf_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>src/Reimann.h</label>
        <link refid="Reimann_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>src/Setup_GPU.h</label>
        <link refid="Setup__GPU_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>src/Spherical.h</label>
        <link refid="Spherical_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/Testing.h</label>
        <link refid="Testing_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>src/Updateforcing.h</label>
        <link refid="Updateforcing_8h_source"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>src/Write_netcdf.h</label>
        <link refid="Write__netcdf_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>src/utctime.h</label>
        <link refid="utctime_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="Boundary_8h_1a1070c3a02b0f106ebfba5aebebe8425d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Flowbnd</definition>
        <argsstring>(Param XParam, Loop&lt; T &gt; &amp;XLoop, BlockP&lt; T &gt; XBlock, bndparam side, DynForcingP&lt; float &gt; Atmp, EvolvingP&lt; T &gt; XEv)</argsstring>
        <name>Flowbnd</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structLoop" kindref="compound">Loop</ref>&lt; T &gt; &amp;</type>
          <declname>XLoop</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="classbndparam" kindref="compound">bndparam</ref></type>
          <declname>side</declname>
        </param>
        <param>
          <type><ref refid="structDynForcingP" kindref="compound">DynForcingP</ref>&lt; float &gt;</type>
          <declname>Atmp</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>XEv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Boundary.h" line="13" column="18" bodyfile="src/Boundary.cu" bodystart="4" bodyend="77" declfile="src/Boundary.h" declline="13" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="Boundary_8h_1a59cbed77b10dbaf2fa1c4261631b78c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__host__ __device__ int</type>
        <definition>__host__ __device__ int Inside</definition>
        <argsstring>(int halowidth, int blkmemwidth, int isright, int istop, int ix, int iy, int ib)</argsstring>
        <name>Inside</name>
        <param>
          <type>int</type>
          <declname>halowidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>blkmemwidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>isright</declname>
        </param>
        <param>
          <type>int</type>
          <declname>istop</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iy</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ib</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Boundary.h" line="14" column="25" bodyfile="src/Boundary.cu" bodystart="1843" bodyend="1877" declfile="src/Boundary.h" declline="14" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="Boundary_8h_1a099d9eb334ae46f6467552a50596a196" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__host__ __device__ bool</type>
        <definition>__host__ __device__ bool isbnd</definition>
        <argsstring>(int isright, int istop, int blkwidth, int ix, int iy)</argsstring>
        <name>isbnd</name>
        <param>
          <type>int</type>
          <declname>isright</declname>
        </param>
        <param>
          <type>int</type>
          <declname>istop</declname>
        </param>
        <param>
          <type>int</type>
          <declname>blkwidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Boundary.h" line="15" column="26" bodyfile="src/Boundary.cu" bodystart="1880" bodyend="1905" declfile="src/Boundary.h" declline="15" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="Boundary_8h_1aa023b0e53092dd1d34728511f1f93005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__host__ void</type>
        <definition>__host__ void maskbnd</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; Xev, T *zb)</argsstring>
        <name>maskbnd</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>Xev</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Boundary.h" line="17" column="27" bodyfile="src/Boundary.cu" bodystart="926" bodyend="1090" declfile="src/Boundary.h" declline="17" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="Boundary_8h_1acdef573f7f2d65d3fe3f215342377a8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void maskbndGPUleft</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; Xev, T *zb)</argsstring>
        <name>maskbndGPUleft</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>Xev</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Boundary.h" line="18" column="29" bodyfile="src/Boundary.cu" bodystart="1095" bodyend="1159" declfile="src/Boundary.h" declline="18" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="Boundary_8h_1aec86c8b6389e6f9ca2e81ab733e58487" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void maskbndGPUtop</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; Xev, T *zb)</argsstring>
        <name>maskbndGPUtop</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>Xev</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Boundary.h" line="19" column="29" bodyfile="src/Boundary.cu" bodystart="1239" bodyend="1297" declfile="src/Boundary.h" declline="19" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="Boundary_8h_1ac1a6983a856cbc02072948f3d3fad1ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void maskbndGPUright</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; Xev, T *zb)</argsstring>
        <name>maskbndGPUright</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>Xev</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Boundary.h" line="20" column="29" bodyfile="src/Boundary.cu" bodystart="1349" bodyend="1408" declfile="src/Boundary.h" declline="20" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="Boundary_8h_1a91a99b6f920543db1cdd58ed166eab2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void maskbndGPUbot</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; Xev, T *zb)</argsstring>
        <name>maskbndGPUbot</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>Xev</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Boundary.h" line="21" column="29" bodyfile="src/Boundary.cu" bodystart="1462" bodyend="1522" declfile="src/Boundary.h" declline="21" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="Boundary_8h_1a974c3e91252e6886c1577201af2d9136" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void maskbndGPUFluxleft</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; Xev, FluxP&lt; T &gt; Flux)</argsstring>
        <name>maskbndGPUFluxleft</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>Xev</declname>
        </param>
        <param>
          <type><ref refid="structFluxP" kindref="compound">FluxP</ref>&lt; T &gt;</type>
          <declname>Flux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Boundary.h" line="23" column="29" bodyfile="src/Boundary.cu" bodystart="1164" bodyend="1234" declfile="src/Boundary.h" declline="23" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="Boundary_8h_1ace0711ff24a69d91c4b3475d956f80b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void maskbndGPUFluxtop</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, FluxP&lt; T &gt; Flux)</argsstring>
        <name>maskbndGPUFluxtop</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structFluxP" kindref="compound">FluxP</ref>&lt; T &gt;</type>
          <declname>Flux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Boundary.h" line="24" column="29" bodyfile="src/Boundary.cu" bodystart="1301" bodyend="1345" declfile="src/Boundary.h" declline="24" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="Boundary_8h_1a1b98408b87883d4ddfbbbd8254ae8d7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void maskbndGPUFluxright</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, FluxP&lt; T &gt; Flux)</argsstring>
        <name>maskbndGPUFluxright</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structFluxP" kindref="compound">FluxP</ref>&lt; T &gt;</type>
          <declname>Flux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Boundary.h" line="25" column="29" bodyfile="src/Boundary.cu" bodystart="1413" bodyend="1458" declfile="src/Boundary.h" declline="25" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="Boundary_8h_1ad76dc3a9c37690c1c68e3ed0c8761d80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void maskbndGPUFluxbot</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, FluxP&lt; T &gt; Flux)</argsstring>
        <name>maskbndGPUFluxbot</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structFluxP" kindref="compound">FluxP</ref>&lt; T &gt;</type>
          <declname>Flux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Boundary.h" line="26" column="29" bodyfile="src/Boundary.cu" bodystart="1526" bodyend="1569" declfile="src/Boundary.h" declline="26" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="Boundary_8h_1a493b3a9d491a55b39aeb7edfe53a5ef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void FlowbndFlux</definition>
        <argsstring>(Param XParam, double totaltime, BlockP&lt; T &gt; XBlock, bndsegment bndseg, DynForcingP&lt; float &gt; Atmp, EvolvingP&lt; T &gt; XEv, FluxP&lt; T &gt; XFlux)</argsstring>
        <name>FlowbndFlux</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type>double</type>
          <declname>totaltime</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="classbndsegment" kindref="compound">bndsegment</ref></type>
          <declname>bndseg</declname>
        </param>
        <param>
          <type><ref refid="structDynForcingP" kindref="compound">DynForcingP</ref>&lt; float &gt;</type>
          <declname>Atmp</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type><ref refid="structFluxP" kindref="compound">FluxP</ref>&lt; T &gt;</type>
          <declname>XFlux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Boundary.h" line="28" column="18" bodyfile="src/Boundary.cu" bodystart="81" bodyend="168" declfile="src/Boundary.h" declline="28" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="Boundary_8h_1ae3a143b7b4d7a10d06fd245daf0e6dd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void FlowbndFlux</definition>
        <argsstring>(Param XParam, double totaltime, BlockP&lt; T &gt; XBlock, bndparam side, DynForcingP&lt; float &gt; Atmp, EvolvingP&lt; T &gt; XEv, FluxP&lt; T &gt; XFlux)</argsstring>
        <name>FlowbndFlux</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type>double</type>
          <declname>totaltime</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="classbndparam" kindref="compound">bndparam</ref></type>
          <declname>side</declname>
        </param>
        <param>
          <type><ref refid="structDynForcingP" kindref="compound">DynForcingP</ref>&lt; float &gt;</type>
          <declname>Atmp</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type><ref refid="structFluxP" kindref="compound">FluxP</ref>&lt; T &gt;</type>
          <declname>XFlux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Boundary.h" line="29" column="18" declfile="src/Boundary.h" declline="29" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="Boundary_8h_1aaec6c50a87ec1475242fd2636570993f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void FlowbndFluxML</definition>
        <argsstring>(Param XParam, double totaltime, BlockP&lt; T &gt; XBlock, bndsegment bndseg, DynForcingP&lt; float &gt; Atmp, EvolvingP&lt; T &gt; XEv, FluxMLP&lt; T &gt; XFlux)</argsstring>
        <name>FlowbndFluxML</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type>double</type>
          <declname>totaltime</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="classbndsegment" kindref="compound">bndsegment</ref></type>
          <declname>bndseg</declname>
        </param>
        <param>
          <type><ref refid="structDynForcingP" kindref="compound">DynForcingP</ref>&lt; float &gt;</type>
          <declname>Atmp</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type><ref refid="structFluxMLP" kindref="compound">FluxMLP</ref>&lt; T &gt;</type>
          <declname>XFlux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Boundary.h" line="30" column="18" bodyfile="src/Boundary.cu" bodystart="172" bodyend="255" declfile="src/Boundary.h" declline="30" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="Boundary_8h_1ad24f377cb23e38ac40ffce632d0971d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void bndFluxGPUSide</definition>
        <argsstring>(Param XParam, bndsegmentside side, BlockP&lt; T &gt; XBlock, DynForcingP&lt; float &gt; Atmp, DynForcingP&lt; float &gt; Zsmap, bool uniform, int type, float zsbnd, T taper, T *zs, T *h, T *un, T *ut, T *Fh, T *Fq, T *Ss)</argsstring>
        <name>bndFluxGPUSide</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="classbndsegmentside" kindref="compound">bndsegmentside</ref></type>
          <declname>side</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structDynForcingP" kindref="compound">DynForcingP</ref>&lt; float &gt;</type>
          <declname>Atmp</declname>
        </param>
        <param>
          <type><ref refid="structDynForcingP" kindref="compound">DynForcingP</ref>&lt; float &gt;</type>
          <declname>Zsmap</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>uniform</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zsbnd</declname>
        </param>
        <param>
          <type>T</type>
          <declname>taper</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>un</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>ut</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>Fh</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>Fq</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>Ss</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Boundary.h" line="32" column="29" bodyfile="src/Boundary.cu" bodystart="322" bodyend="485" declfile="src/Boundary.h" declline="32" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="Boundary_8h_1a994c0a68a28b55ac136fa3fd105c5db8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void bndGPU</definition>
        <argsstring>(Param XParam, bndparam side, BlockP&lt; T &gt; XBlock, DynForcingP&lt; float &gt; Atmp, float itime, T *zs, T *h, T *un, T *ut)</argsstring>
        <name>bndGPU</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="classbndparam" kindref="compound">bndparam</ref></type>
          <declname>side</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structDynForcingP" kindref="compound">DynForcingP</ref>&lt; float &gt;</type>
          <declname>Atmp</declname>
        </param>
        <param>
          <type>float</type>
          <declname>itime</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>un</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>ut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Boundary.h" line="34" column="29" bodyfile="src/Boundary.cu" bodystart="648" bodyend="770" declfile="src/Boundary.h" declline="34" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="Boundary_8h_1a31da8c718f61d1febaf765248e0c73a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__host__ void</type>
        <definition>__host__ void bndCPU</definition>
        <argsstring>(Param XParam, bndparam side, BlockP&lt; T &gt; XBlock, std::vector&lt; double &gt; zsbndvec, std::vector&lt; double &gt; uubndvec, std::vector&lt; double &gt; vvbndvec, DynForcingP&lt; float &gt; Atmp, T *zs, T *h, T *un, T *ut)</argsstring>
        <name>bndCPU</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="classbndparam" kindref="compound">bndparam</ref></type>
          <declname>side</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>zsbndvec</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>uubndvec</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>vvbndvec</declname>
        </param>
        <param>
          <type><ref refid="structDynForcingP" kindref="compound">DynForcingP</ref>&lt; float &gt;</type>
          <declname>Atmp</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>un</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>ut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Boundary.h" line="35" column="27" bodyfile="src/Boundary.cu" bodystart="774" bodyend="919" declfile="src/Boundary.h" declline="35" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="Boundary_8h_1ad433f7b7fe383758a05a3788eeddf488" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ __host__ void</type>
        <definition>__device__ __host__ void findmaskside</definition>
        <argsstring>(int side, bool &amp;isleftbot, bool &amp;islefttop, bool &amp;istopleft, bool &amp;istopright, bool &amp;isrighttop, bool &amp;isrightbot, bool &amp;isbotright, bool &amp;isbotleft)</argsstring>
        <name>findmaskside</name>
        <param>
          <type>int</type>
          <declname>side</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>isleftbot</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>islefttop</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>istopleft</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>istopright</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>isrighttop</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>isrightbot</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>isbotright</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>isbotleft</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Boundary.h" line="38" column="26" bodyfile="src/Boundary.cu" bodystart="1573" bodyend="1595" declfile="src/Boundary.h" declline="38" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="Boundary_8h_1ac7033b2e3bb1ce6a37421d932dc2c9f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__device__ __host__ void</type>
        <definition>__device__ __host__ void halowall</definition>
        <argsstring>(T zsinside, T &amp;un, T &amp;ut, T &amp;zs, T &amp;h, T &amp;zb)</argsstring>
        <name>halowall</name>
        <param>
          <type>T</type>
          <declname>zsinside</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>un</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>ut</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Boundary.h" line="39" column="38" bodyfile="src/Boundary.cu" bodystart="1598" bodyend="1608" declfile="src/Boundary.h" declline="39" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="Boundary_8h_1ac038c08cc0c028bbd1495d23e5f9a1f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__device__ __host__ void</type>
        <definition>__device__ __host__ void noslipbnd</definition>
        <argsstring>(T zsinside, T hinside, T &amp;un, T &amp;ut, T &amp;zs, T &amp;h)</argsstring>
        <name>noslipbnd</name>
        <param>
          <type>T</type>
          <declname>zsinside</declname>
        </param>
        <param>
          <type>T</type>
          <declname>hinside</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>un</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>ut</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Boundary.h" line="40" column="38" bodyfile="src/Boundary.cu" bodystart="1611" bodyend="1620" declfile="src/Boundary.h" declline="40" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="Boundary_8h_1a11c397504eb338755672f8c9f64862c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__device__ __host__ void</type>
        <definition>__device__ __host__ void noslipbndQ</definition>
        <argsstring>(T &amp;F, T &amp;G, T &amp;S)</argsstring>
        <name>noslipbndQ</name>
        <param>
          <type>T &amp;</type>
          <declname>F</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>G</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>S</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Boundary.h" line="41" column="38" bodyfile="src/Boundary.cu" bodystart="1622" bodyend="1629" declfile="src/Boundary.h" declline="41" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="Boundary_8h_1a526a85506746cc9877baaea4ee1f84ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__device__ __host__ void</type>
        <definition>__device__ __host__ void ABS1D</definition>
        <argsstring>(T g, T sign, T zsbnd, T zsinside, T hinside, T utbnd, T unbnd, T &amp;un, T &amp;ut, T &amp;zs, T &amp;h)</argsstring>
        <name>ABS1D</name>
        <param>
          <type>T</type>
          <declname>g</declname>
        </param>
        <param>
          <type>T</type>
          <declname>sign</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zsbnd</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zsinside</declname>
        </param>
        <param>
          <type>T</type>
          <declname>hinside</declname>
        </param>
        <param>
          <type>T</type>
          <declname>utbnd</declname>
        </param>
        <param>
          <type>T</type>
          <declname>unbnd</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>un</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>ut</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Boundary.h" line="42" column="38" bodyfile="src/Boundary.cu" bodystart="1632" bodyend="1641" declfile="src/Boundary.h" declline="42" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="Boundary_8h_1a6ea9bad9e1b37e1db9d6bec65d18259d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__device__ __host__ void</type>
        <definition>__device__ __host__ void ABS1DQ</definition>
        <argsstring>(T g, T sign, T factime, T facrel, T zs, T zsbnd, T zsinside, T h, T &amp;qmean, T &amp;q, T &amp;G, T &amp;S)</argsstring>
        <name>ABS1DQ</name>
        <param>
          <type>T</type>
          <declname>g</declname>
        </param>
        <param>
          <type>T</type>
          <declname>sign</declname>
        </param>
        <param>
          <type>T</type>
          <declname>factime</declname>
        </param>
        <param>
          <type>T</type>
          <declname>facrel</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zsbnd</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zsinside</declname>
        </param>
        <param>
          <type>T</type>
          <declname>h</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>qmean</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>G</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>S</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Boundary.h" line="43" column="38" bodyfile="src/Boundary.cu" bodystart="1643" bodyend="1677" declfile="src/Boundary.h" declline="43" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="Boundary_8h_1a6cb790e8b942d8f4f32cefb163df9ffd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__device__ __host__ void</type>
        <definition>__device__ __host__ void Dirichlet1D</definition>
        <argsstring>(T g, T sign, T zsbnd, T zsinside, T hinside, T uninside, T &amp;un, T &amp;ut, T &amp;zs, T &amp;h)</argsstring>
        <name>Dirichlet1D</name>
        <param>
          <type>T</type>
          <declname>g</declname>
        </param>
        <param>
          <type>T</type>
          <declname>sign</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zsbnd</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zsinside</declname>
        </param>
        <param>
          <type>T</type>
          <declname>hinside</declname>
        </param>
        <param>
          <type>T</type>
          <declname>uninside</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>un</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>ut</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Boundary.h" line="44" column="38" bodyfile="src/Boundary.cu" bodystart="1679" bodyend="1689" declfile="src/Boundary.h" declline="44" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="Boundary_8h_1a7e7c96b473fa73b48210521f9b06958f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__device__ __host__ void</type>
        <definition>__device__ __host__ void Dirichlet1Q</definition>
        <argsstring>(T g, T sign, T zsbnd, T zsinside, T hinside, T uninside, T &amp;q)</argsstring>
        <name>Dirichlet1Q</name>
        <param>
          <type>T</type>
          <declname>g</declname>
        </param>
        <param>
          <type>T</type>
          <declname>sign</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zsbnd</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zsinside</declname>
        </param>
        <param>
          <type>T</type>
          <declname>hinside</declname>
        </param>
        <param>
          <type>T</type>
          <declname>uninside</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Boundary.h" line="45" column="38" bodyfile="src/Boundary.cu" bodystart="1691" bodyend="1703" declfile="src/Boundary.h" declline="45" declcolumn="38"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BOUNDARY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOUNDARY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>includes,<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;General.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MemManagement.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Util_CPU.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Updateforcing.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Flowbnd(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structLoop" kindref="compound">Loop&lt;T&gt;</ref>&amp;<sp/>XLoop,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="classbndparam" kindref="compound">bndparam</ref><sp/>side,<sp/><ref refid="structDynForcingP" kindref="compound">DynForcingP&lt;float&gt;</ref><sp/>Atmp,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>XEv);</highlight></codeline>
<codeline lineno="14"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Inside(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>halowidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkmemwidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isright,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>istop,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iy,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib);</highlight></codeline>
<codeline lineno="15"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isbnd(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isright,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>istop,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkwidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iy);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__host__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>maskbnd(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>Xev,<sp/>T*<sp/>zb);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>maskbndGPUleft(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>Xev,<sp/>T*<sp/>zb);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>maskbndGPUtop(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>Xev,<sp/>T*<sp/>zb);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>maskbndGPUright(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>Xev,<sp/>T*<sp/>zb);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>maskbndGPUbot(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>Xev,<sp/>T*<sp/>zb);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>maskbndGPUFluxleft(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>Xev,<sp/><ref refid="structFluxP" kindref="compound">FluxP&lt;T&gt;</ref><sp/>Flux);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>maskbndGPUFluxtop(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structFluxP" kindref="compound">FluxP&lt;T&gt;</ref><sp/>Flux);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>maskbndGPUFluxright(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structFluxP" kindref="compound">FluxP&lt;T&gt;</ref><sp/>Flux);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>maskbndGPUFluxbot(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structFluxP" kindref="compound">FluxP&lt;T&gt;</ref><sp/>Flux);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FlowbndFlux(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>totaltime,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="classbndsegment" kindref="compound">bndsegment</ref><sp/>bndseg,<sp/><ref refid="structDynForcingP" kindref="compound">DynForcingP&lt;float&gt;</ref><sp/>Atmp,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>XEv,<sp/><ref refid="structFluxP" kindref="compound">FluxP&lt;T&gt;</ref><sp/>XFlux);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FlowbndFlux(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>totaltime,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="classbndparam" kindref="compound">bndparam</ref><sp/>side,<sp/><ref refid="structDynForcingP" kindref="compound">DynForcingP&lt;float&gt;</ref><sp/>Atmp,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>XEv,<sp/><ref refid="structFluxP" kindref="compound">FluxP&lt;T&gt;</ref><sp/>XFlux);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FlowbndFluxML(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>totaltime,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="classbndsegment" kindref="compound">bndsegment</ref><sp/>bndseg,<sp/><ref refid="structDynForcingP" kindref="compound">DynForcingP&lt;float&gt;</ref><sp/>Atmp,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>XEv,<sp/><ref refid="structFluxMLP" kindref="compound">FluxMLP&lt;T&gt;</ref><sp/>XFlux);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bndFluxGPUSide(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="classbndsegmentside" kindref="compound">bndsegmentside</ref><sp/>side,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structDynForcingP" kindref="compound">DynForcingP&lt;float&gt;</ref><sp/>Atmp,<sp/><ref refid="structDynForcingP" kindref="compound">DynForcingP&lt;float&gt;</ref><sp/>Zsmap,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>uniform,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zsbnd,<sp/>T<sp/>taper,<sp/>T*<sp/>zs,<sp/>T*<sp/>h,<sp/>T*<sp/>un,<sp/>T*<sp/>ut,<sp/>T*<sp/>Fh,<sp/>T*<sp/>Fq,<sp/>T*<sp/>Ss);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bndGPU(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="classbndparam" kindref="compound">bndparam</ref><sp/>side,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structDynForcingP" kindref="compound">DynForcingP&lt;float&gt;</ref><sp/>Atmp,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>itime,<sp/>T*<sp/>zs,<sp/>T*<sp/>h,<sp/>T*<sp/>un,<sp/>T*<sp/>ut);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__host__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bndCPU(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="classbndparam" kindref="compound">bndparam</ref><sp/>side,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/>std::vector&lt;double&gt;<sp/>zsbndvec,<sp/>std::vector&lt;double&gt;<sp/>uubndvec,<sp/>std::vector&lt;double&gt;<sp/>vvbndvec,<sp/><ref refid="structDynForcingP" kindref="compound">DynForcingP&lt;float&gt;</ref><sp/>Atmp,<sp/>T*<sp/>zs,<sp/>T*<sp/>h,<sp/>T*<sp/>un,<sp/>T*<sp/>ut);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">__device__<sp/>__host__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>findmaskside(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>side,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;isleftbot,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>islefttop,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>istopleft,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>istopright,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>isrighttop,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>isrightbot,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>isbotright,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>isbotleft);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__device__<sp/>__host__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>halowall(T<sp/>zsinside,<sp/>T&amp;<sp/>un,<sp/>T&amp;<sp/>ut,<sp/>T&amp;<sp/>zs,<sp/>T&amp;<sp/>h,T&amp;zb);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__device__<sp/>__host__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>noslipbnd(T<sp/>zsinside,T<sp/>hinside,T<sp/>&amp;un,<sp/>T<sp/>&amp;ut,T<sp/>&amp;zs,<sp/>T<sp/>&amp;h);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__device__<sp/>__host__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>noslipbndQ(T&amp;<sp/>F,<sp/>T&amp;<sp/>G,<sp/>T&amp;<sp/>S);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__device__<sp/>__host__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ABS1D(T<sp/>g,<sp/>T<sp/>sign,<sp/>T<sp/>zsbnd,<sp/>T<sp/>zsinside,<sp/>T<sp/>hinside,<sp/>T<sp/>utbnd,T<sp/>unbnd,<sp/>T&amp;<sp/>un,<sp/>T&amp;<sp/>ut,<sp/>T&amp;<sp/>zs,<sp/>T&amp;<sp/>h);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__device__<sp/>__host__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ABS1DQ(T<sp/>g,<sp/>T<sp/>sign,<sp/>T<sp/>factime,<sp/>T<sp/>facrel,<sp/>T<sp/>zs,<sp/>T<sp/>zsbnd,<sp/>T<sp/>zsinside,<sp/>T<sp/>h,<sp/>T&amp;<sp/>qmean,<sp/>T&amp;<sp/>q,<sp/>T&amp;<sp/>G,<sp/>T&amp;<sp/>S);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__device__<sp/>__host__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Dirichlet1D(T<sp/>g,<sp/>T<sp/>sign,<sp/>T<sp/>zsbnd,<sp/>T<sp/>zsinside,<sp/>T<sp/>hinside,<sp/><sp/>T<sp/>uninside,<sp/>T&amp;<sp/>un,<sp/>T&amp;<sp/>ut,<sp/>T&amp;<sp/>zs,<sp/>T&amp;<sp/>h);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__device__<sp/>__host__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Dirichlet1Q(T<sp/>g,<sp/>T<sp/>sign,<sp/>T<sp/>zsbnd,<sp/>T<sp/>zsinside,<sp/>T<sp/>hinside,<sp/>T<sp/>uninside,<sp/>T&amp;<sp/>q);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>End<sp/>of<sp/>global<sp/>definition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/Boundary.h"/>
  </compounddef>
</doxygen>
