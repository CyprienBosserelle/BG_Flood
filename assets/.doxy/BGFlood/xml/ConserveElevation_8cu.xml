<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="ConserveElevation_8cu" kind="file" language="C++">
    <compoundname>ConserveElevation.cu</compoundname>
    <includes refid="ConserveElevation_8h" local="yes">ConserveElevation.h</includes>
    <incdepgraph>
      <node id="27">
        <label>Arrays.h</label>
        <link refid="Arrays_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>Boundary.h</label>
        <link refid="Boundary_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/ConserveElevation.cu</label>
        <link refid="ConserveElevation_8cu"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ConserveElevation.h</label>
        <link refid="ConserveElevation_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>Forcing.h</label>
        <link refid="Forcing_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>General.h</label>
        <link refid="General_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>Gradients.h</label>
        <link refid="Gradients_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>GridManip.h</label>
        <link refid="GridManip_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>Halo.h</label>
        <link refid="Halo_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>InitEvolv.h</label>
        <link refid="InitEvolv_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>InitialConditions.h</label>
        <link refid="InitialConditions_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>Input.h</label>
        <link refid="Input_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>Kurganov.h</label>
        <link refid="Kurganov_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>MemManagement.h</label>
        <link refid="MemManagement_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>Mesh.h</label>
        <link refid="Mesh_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>Param.h</label>
        <link refid="Param_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>Poly.h</label>
        <link refid="Poly_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>ReadForcing.h</label>
        <link refid="ReadForcing_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>ReadInput.h</label>
        <link refid="ReadInput_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>Read_netcdf.h</label>
        <link refid="Read__netcdf_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>Setup_GPU.h</label>
        <link refid="Setup__GPU_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>Spherical.h</label>
        <link refid="Spherical_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>Updateforcing.h</label>
        <link refid="Updateforcing_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>Util_CPU.h</label>
        <link refid="Util__CPU_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>Write_netcdf.h</label>
        <link refid="Write__netcdf_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>Write_txtlog.h</label>
        <link refid="Write__txtlog_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>utctime.h</label>
        <link refid="utctime_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>algorithm</label>
      </node>
      <node id="10">
        <label>chrono</label>
      </node>
      <node id="9">
        <label>cmath</label>
      </node>
      <node id="11">
        <label>ctime</label>
      </node>
      <node id="4">
        <label>cuda_runtime.h</label>
      </node>
      <node id="5">
        <label>device_launch_parameters.h</label>
      </node>
      <node id="19">
        <label>fstream</label>
      </node>
      <node id="18">
        <label>iomanip</label>
      </node>
      <node id="17">
        <label>iostream</label>
      </node>
      <node id="21">
        <label>limits</label>
      </node>
      <node id="14">
        <label>map</label>
      </node>
      <node id="8">
        <label>math.h</label>
      </node>
      <node id="15">
        <label>netcdf.h</label>
      </node>
      <node id="20">
        <label>sstream</label>
      </node>
      <node id="6">
        <label>stdio.h</label>
      </node>
      <node id="7">
        <label>stdlib.h</label>
      </node>
      <node id="12">
        <label>string</label>
      </node>
      <node id="22">
        <label>thread</label>
      </node>
      <node id="13">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="ConserveElevation_8cu_1a1f752ed5b01997f37e1f0986a612abe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void conserveElevation</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; XEv, T *zb)</argsstring>
        <name>conserveElevation</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="4" column="18" bodyfile="src/ConserveElevation.cu" bodystart="4" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a25d420a3d2df74398b3cd2db77a860a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void conserveElevation&lt; float &gt;</definition>
        <argsstring>(Param XParam, BlockP&lt; float &gt; XBlock, EvolvingP&lt; float &gt; XEv, float *zb)</argsstring>
        <name>conserveElevation&lt; float &gt;</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; float &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; float &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="24" column="10" declfile="src/ConserveElevation.cu" declline="24" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a8e72c8ff616a7396c72a588d76546cd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void conserveElevation&lt; double &gt;</definition>
        <argsstring>(Param XParam, BlockP&lt; double &gt; XBlock, EvolvingP&lt; double &gt; XEv, double *zb)</argsstring>
        <name>conserveElevation&lt; double &gt;</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; double &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; double &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="25" column="10" declfile="src/ConserveElevation.cu" declline="25" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a9a251e892ac246c237767b097c4ca457" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void conserveElevationGPU</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; XEv, T *zb)</argsstring>
        <name>conserveElevationGPU</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="27" column="18" bodyfile="src/ConserveElevation.cu" bodystart="27" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1acbe9a1b5f1a73f8b6a55a9cfb1977b3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void conserveElevationGPU&lt; float &gt;</definition>
        <argsstring>(Param XParam, BlockP&lt; float &gt; XBlock, EvolvingP&lt; float &gt; XEv, float *zb)</argsstring>
        <name>conserveElevationGPU&lt; float &gt;</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; float &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; float &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="44" column="10" declfile="src/ConserveElevation.cu" declline="44" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a2fea03b2cfb0f25163d7a75885379ed5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void conserveElevationGPU&lt; double &gt;</definition>
        <argsstring>(Param XParam, BlockP&lt; double &gt; XBlock, EvolvingP&lt; double &gt; XEv, double *zb)</argsstring>
        <name>conserveElevationGPU&lt; double &gt;</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; double &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; double &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="45" column="10" declfile="src/ConserveElevation.cu" declline="45" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1aba3f7b8cb37fdda55fe8938ea33d4512" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void WetDryProlongation</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; XEv, T *zb)</argsstring>
        <name>WetDryProlongation</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="47" column="18" bodyfile="src/ConserveElevation.cu" bodystart="47" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a0ca8c41db56404391cc5fa2f041891d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void WetDryProlongation&lt; double &gt;</definition>
        <argsstring>(Param XParam, BlockP&lt; double &gt; XBlock, EvolvingP&lt; double &gt; XEv, double *zb)</argsstring>
        <name>WetDryProlongation&lt; double &gt;</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; double &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; double &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="171" column="10" declfile="src/ConserveElevation.cu" declline="171" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a4d8ad0ffb5e2681d69b44af34b743848" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void WetDryProlongation&lt; float &gt;</definition>
        <argsstring>(Param XParam, BlockP&lt; float &gt; XBlock, EvolvingP&lt; float &gt; XEv, float *zb)</argsstring>
        <name>WetDryProlongation&lt; float &gt;</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; float &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; float &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="172" column="10" declfile="src/ConserveElevation.cu" declline="172" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1afebcff1a2c87ddb0c67afdea7185cc23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void WetDryRestriction</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; XEv, T *zb)</argsstring>
        <name>WetDryRestriction</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="174" column="18" bodyfile="src/ConserveElevation.cu" bodystart="174" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a26918c4f0dcee7e40e993c563518531e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void WetDryRestriction&lt; double &gt;</definition>
        <argsstring>(Param XParam, BlockP&lt; double &gt; XBlock, EvolvingP&lt; double &gt; XEv, double *zb)</argsstring>
        <name>WetDryRestriction&lt; double &gt;</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; double &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; double &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="321" column="10" declfile="src/ConserveElevation.cu" declline="321" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1abbe94a23ab0cabecf038df3bde2bd741" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void WetDryRestriction&lt; float &gt;</definition>
        <argsstring>(Param XParam, BlockP&lt; float &gt; XBlock, EvolvingP&lt; float &gt; XEv, float *zb)</argsstring>
        <name>WetDryRestriction&lt; float &gt;</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; float &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; float &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="322" column="10" declfile="src/ConserveElevation.cu" declline="322" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1ab7fa1d7163667bab1c7cd84553448b7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void WetDryProlongationGPU</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; XEv, T *zb)</argsstring>
        <name>WetDryProlongationGPU</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="324" column="18" bodyfile="src/ConserveElevation.cu" bodystart="324" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a80666bea0a56b8790c44bc1724ef6a37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void WetDryProlongationGPU&lt; double &gt;</definition>
        <argsstring>(Param XParam, BlockP&lt; double &gt; XBlock, EvolvingP&lt; double &gt; XEv, double *zb)</argsstring>
        <name>WetDryProlongationGPU&lt; double &gt;</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; double &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; double &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="342" column="10" declfile="src/ConserveElevation.cu" declline="342" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a372cf4bea08c72b9c34b7394a2ffeb8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void WetDryProlongationGPU&lt; float &gt;</definition>
        <argsstring>(Param XParam, BlockP&lt; float &gt; XBlock, EvolvingP&lt; float &gt; XEv, float *zb)</argsstring>
        <name>WetDryProlongationGPU&lt; float &gt;</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; float &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; float &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="343" column="10" declfile="src/ConserveElevation.cu" declline="343" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1acdafa94af71c15ee14b6b73ccae8628d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void WetDryRestrictionGPU</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; XEv, T *zb)</argsstring>
        <name>WetDryRestrictionGPU</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="345" column="18" bodyfile="src/ConserveElevation.cu" bodystart="345" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a434ae645c1faf672ee43345e6a27cfc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void WetDryRestrictionGPU&lt; double &gt;</definition>
        <argsstring>(Param XParam, BlockP&lt; double &gt; XBlock, EvolvingP&lt; double &gt; XEv, double *zb)</argsstring>
        <name>WetDryRestrictionGPU&lt; double &gt;</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; double &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; double &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="363" column="10" declfile="src/ConserveElevation.cu" declline="363" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a4937f2dd7f289686974ba6a3d39f1045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void WetDryRestrictionGPU&lt; float &gt;</definition>
        <argsstring>(Param XParam, BlockP&lt; float &gt; XBlock, EvolvingP&lt; float &gt; XEv, float *zb)</argsstring>
        <name>WetDryRestrictionGPU&lt; float &gt;</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; float &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; float &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="364" column="10" declfile="src/ConserveElevation.cu" declline="364" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a6e3d3de971e7e7911a3d5e6c4153eb99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void ProlongationElevation</definition>
        <argsstring>(int halowidth, int blkmemwidth, T eps, int ib, int ibn, int ihalo, int jhalo, int ip, int jp, T *h, T *zs, T *zb)</argsstring>
        <name>ProlongationElevation</name>
        <param>
          <type>int</type>
          <declname>halowidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>blkmemwidth</declname>
        </param>
        <param>
          <type>T</type>
          <declname>eps</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ib</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ihalo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jhalo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jp</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="366" column="38" bodyfile="src/ConserveElevation.cu" bodystart="366" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1abb6c941ca76807dc3cc459c7961b6a5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void RevertProlongationElevation</definition>
        <argsstring>(int halowidth, int blkmemwidth, T eps, int ib, int ibn, int ihalo, int jhalo, int ip, int jp, int level, T dx, T *h, T *zb, T *dzbdx, T *dzbdy)</argsstring>
        <name>RevertProlongationElevation</name>
        <param>
          <type>int</type>
          <declname>halowidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>blkmemwidth</declname>
        </param>
        <param>
          <type>T</type>
          <declname>eps</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ib</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ihalo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jhalo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>T</type>
          <declname>dx</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dzbdx</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dzbdy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="400" column="38" bodyfile="src/ConserveElevation.cu" bodystart="400" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a68ad431ecdf0dc2bf8f8dc216fa86ea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void ProlongationElevationGH</definition>
        <argsstring>(int halowidth, int blkmemwidth, T eps, int ib, int ibn, int ihalo, int jhalo, int ip, int jp, T *h, T *dhdx, T *dzsdx)</argsstring>
        <name>ProlongationElevationGH</name>
        <param>
          <type>int</type>
          <declname>halowidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>blkmemwidth</declname>
        </param>
        <param>
          <type>T</type>
          <declname>eps</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ib</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ihalo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jhalo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jp</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dhdx</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dzsdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="456" column="38" bodyfile="src/ConserveElevation.cu" bodystart="456" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1ad0aa50621acd0b7381873cafd5ba4160" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void conserveElevation</definition>
        <argsstring>(int halowidth, int blkmemwidth, T eps, int ib, int ibn, int ihalo, int jhalo, int i, int j, T *h, T *zs, T *zb)</argsstring>
        <name>conserveElevation</name>
        <param>
          <type>int</type>
          <declname>halowidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>blkmemwidth</declname>
        </param>
        <param>
          <type>T</type>
          <declname>eps</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ib</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ihalo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jhalo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="485" column="38" bodyfile="src/ConserveElevation.cu" bodystart="485" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1addad2fcf5dde4acadec943eac67027de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template __host__ __device__ void</type>
        <definition>template __host__ __device__ void conserveElevation&lt; float &gt;</definition>
        <argsstring>(int halowidth, int blkmemwidth, float eps, int ib, int ibn, int ihalo, int jhalo, int i, int j, float *h, float *zs, float *zb)</argsstring>
        <name>conserveElevation&lt; float &gt;</name>
        <param>
          <type>int</type>
          <declname>halowidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>blkmemwidth</declname>
        </param>
        <param>
          <type>float</type>
          <declname>eps</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ib</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ihalo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jhalo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="528" column="30" declfile="src/ConserveElevation.cu" declline="528" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a0e5312ac2119995e041776c85db2ffd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template __host__ __device__ void</type>
        <definition>template __host__ __device__ void conserveElevation&lt; double &gt;</definition>
        <argsstring>(int halowidth, int blkmemwidth, double eps, int ib, int ibn, int ihalo, int jhalo, int i, int j, double *h, double *zs, double *zb)</argsstring>
        <name>conserveElevation&lt; double &gt;</name>
        <param>
          <type>int</type>
          <declname>halowidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>blkmemwidth</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ib</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ihalo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jhalo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="529" column="30" declfile="src/ConserveElevation.cu" declline="529" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a61ffafd5fa2ebb6ec32c3797ffc6d38c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void wetdryrestriction</definition>
        <argsstring>(int halowidth, int blkmemwidth, T eps, int ib, int ibn, int ihalo, int jhalo, int i, int j, T *h, T *zs, T *zb)</argsstring>
        <name>wetdryrestriction</name>
        <param>
          <type>int</type>
          <declname>halowidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>blkmemwidth</declname>
        </param>
        <param>
          <type>T</type>
          <declname>eps</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ib</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ihalo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jhalo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="531" column="38" bodyfile="src/ConserveElevation.cu" bodystart="531" bodyend="581"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a082f0e02e07f8710a980b0c0ebd5f754" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template __host__ __device__ void</type>
        <definition>template __host__ __device__ void wetdryrestriction&lt; float &gt;</definition>
        <argsstring>(int halowidth, int blkmemwidth, float eps, int ib, int ibn, int ihalo, int jhalo, int i, int j, float *h, float *zs, float *zb)</argsstring>
        <name>wetdryrestriction&lt; float &gt;</name>
        <param>
          <type>int</type>
          <declname>halowidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>blkmemwidth</declname>
        </param>
        <param>
          <type>float</type>
          <declname>eps</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ib</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ihalo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jhalo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="582" column="30" declfile="src/ConserveElevation.cu" declline="582" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a703fbdb71566c3df0e98f08e4be4804c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template __host__ __device__ void</type>
        <definition>template __host__ __device__ void wetdryrestriction&lt; double &gt;</definition>
        <argsstring>(int halowidth, int blkmemwidth, double eps, int ib, int ibn, int ihalo, int jhalo, int i, int j, double *h, double *zs, double *zb)</argsstring>
        <name>wetdryrestriction&lt; double &gt;</name>
        <param>
          <type>int</type>
          <declname>halowidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>blkmemwidth</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ib</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ihalo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jhalo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="583" column="30" declfile="src/ConserveElevation.cu" declline="583" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a704005cf1bc1255d60be7a4f744cceb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void conserveElevation</definition>
        <argsstring>(T zb, T &amp;zswet, T &amp;hwet)</argsstring>
        <name>conserveElevation</name>
        <param>
          <type>T</type>
          <declname>zb</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>zswet</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>hwet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="588" column="38" bodyfile="src/ConserveElevation.cu" bodystart="588" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1ad180aea103462200ba25dbc872435b43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void conserveElevationGradHalo</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, T *h, T *zs, T *zb, T *dhdx, T *dzsdx, T *dhdy, T *dzsdy)</argsstring>
        <name>conserveElevationGradHalo</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dhdx</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dzsdx</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dhdy</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dzsdy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="606" column="18" bodyfile="src/ConserveElevation.cu" bodystart="606" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a711b9c1a2611fb73a69efde4d777c4a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void conserveElevationGradHalo&lt; float &gt;</definition>
        <argsstring>(Param XParam, BlockP&lt; float &gt; XBlock, float *h, float *zs, float *zb, float *dhdx, float *dzsdx, float *dhdy, float *dzsdy)</argsstring>
        <name>conserveElevationGradHalo&lt; float &gt;</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; float &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>zb</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>dhdx</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>dzsdx</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>dhdy</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>dzsdy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="618" column="10" declfile="src/ConserveElevation.cu" declline="618" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a513397e8afcdbaa8a05746ab9304b648" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void conserveElevationGradHalo&lt; double &gt;</definition>
        <argsstring>(Param XParam, BlockP&lt; double &gt; XBlock, double *h, double *zs, double *zb, double *dhdx, double *dzsdx, double *dhdy, double *dzsdy)</argsstring>
        <name>conserveElevationGradHalo&lt; double &gt;</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; double &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>zb</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dhdx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dzsdx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dhdy</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dzsdy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="619" column="10" declfile="src/ConserveElevation.cu" declline="619" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a05665562887f49a5bcd5ab5d3b4db5c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void conserveElevationGradHaloGPU</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, T *h, T *zs, T *zb, T *dhdx, T *dzsdx, T *dhdy, T *dzsdy)</argsstring>
        <name>conserveElevationGradHaloGPU</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dhdx</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dzsdx</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dhdy</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dzsdy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="621" column="18" bodyfile="src/ConserveElevation.cu" bodystart="621" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1aecbabc8d8c6a0fbc3863bd2c9fba3b8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void conserveElevationGradHaloGPU&lt; float &gt;</definition>
        <argsstring>(Param XParam, BlockP&lt; float &gt; XBlock, float *h, float *zs, float *zb, float *dhdx, float *dzsdx, float *dhdy, float *dzsdy)</argsstring>
        <name>conserveElevationGradHaloGPU&lt; float &gt;</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; float &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>zb</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>dhdx</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>dzsdx</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>dhdy</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>dzsdy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="640" column="10" declfile="src/ConserveElevation.cu" declline="640" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a1c42431478e1aee3a447e357736735e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void conserveElevationGradHaloGPU&lt; double &gt;</definition>
        <argsstring>(Param XParam, BlockP&lt; double &gt; XBlock, double *h, double *zs, double *zb, double *dhdx, double *dzsdx, double *dhdy, double *dzsdy)</argsstring>
        <name>conserveElevationGradHaloGPU&lt; double &gt;</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; double &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>zb</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dhdx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dzsdx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dhdy</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dzsdy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="641" column="10" declfile="src/ConserveElevation.cu" declline="641" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a1ebd9e84b7eeeb143a5dbd4617ee075a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void conserveElevationGradHalo</definition>
        <argsstring>(int halowidth, int blkmemwidth, T eps, int ib, int ibn, int ihalo, int jhalo, int i, int j, T *h, T *dhdx, T *dhdy)</argsstring>
        <name>conserveElevationGradHalo</name>
        <param>
          <type>int</type>
          <declname>halowidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>blkmemwidth</declname>
        </param>
        <param>
          <type>T</type>
          <declname>eps</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ib</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ihalo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jhalo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dhdx</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dhdy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="643" column="38" bodyfile="src/ConserveElevation.cu" bodystart="643" bodyend="661"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1acabc09fa9e7842c6fa7849461eaaa443" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void conserveElevationGradHaloA</definition>
        <argsstring>(int halowidth, int blkmemwidth, int ib, int ibn, int ihalo, int jhalo, int ip, int jp, int iq, int jq, T theta, T delta, T *h, T *dhdx)</argsstring>
        <name>conserveElevationGradHaloA</name>
        <param>
          <type>int</type>
          <declname>halowidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>blkmemwidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ib</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ihalo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jhalo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iq</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jq</declname>
        </param>
        <param>
          <type>T</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>T</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dhdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="664" column="38" bodyfile="src/ConserveElevation.cu" bodystart="664" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1af62cad03c45d23cdf661a60a17e39723" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void conserveElevationGradHaloB</definition>
        <argsstring>(int halowidth, int blkmemwidth, int ib, int ibn, int ihalo, int jhalo, int ip, int jp, int iq, int jq, T theta, T delta, T eps, T *h, T *zs, T *zb, T *dhdx, T *dzsdx)</argsstring>
        <name>conserveElevationGradHaloB</name>
        <param>
          <type>int</type>
          <declname>halowidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>blkmemwidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ib</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ihalo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jhalo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iq</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jq</declname>
        </param>
        <param>
          <type>T</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>T</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>T</type>
          <declname>eps</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dhdx</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dzsdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="711" column="38" bodyfile="src/ConserveElevation.cu" bodystart="711" bodyend="784"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a70a8ec7acee3b7252a71e9fd9d7c06b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void conserveElevationGHLeft</definition>
        <argsstring>(Param XParam, int ib, int ibLB, int ibLT, BlockP&lt; T &gt; XBlock, T *h, T *zs, T *zb, T *dhdx, T *dzsdx)</argsstring>
        <name>conserveElevationGHLeft</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ib</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibLB</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibLT</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dhdx</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dzsdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="786" column="18" bodyfile="src/ConserveElevation.cu" bodystart="786" bodyend="856"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1ac480e3b9358d672ce5564fa5e5e6916d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void conserveElevationGHLeft</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, T *h, T *zs, T *zb, T *dhdx, T *dzsdx)</argsstring>
        <name>conserveElevationGHLeft</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dhdx</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dzsdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="858" column="29" bodyfile="src/ConserveElevation.cu" bodystart="858" bodyend="923"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a81f977cd054b124c4bf3c59041cc6a60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void conserveElevationGHRight</definition>
        <argsstring>(Param XParam, int ib, int ibRB, int ibRT, BlockP&lt; T &gt; XBlock, T *h, T *zs, T *zb, T *dhdx, T *dzsdx)</argsstring>
        <name>conserveElevationGHRight</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ib</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibRB</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibRT</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dhdx</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dzsdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="925" column="18" bodyfile="src/ConserveElevation.cu" bodystart="925" bodyend="988"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1aa74d877a6a36748655d6396b6437bfe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void conserveElevationGHRight</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, T *h, T *zs, T *zb, T *dhdx, T *dzsdx)</argsstring>
        <name>conserveElevationGHRight</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dhdx</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dzsdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="990" column="29" bodyfile="src/ConserveElevation.cu" bodystart="990" bodyend="1058"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1af53ee3b0d8b0b8130b74a64474858c87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void conserveElevationGHTop</definition>
        <argsstring>(Param XParam, int ib, int ibTL, int ibTR, BlockP&lt; T &gt; XBlock, T *h, T *zs, T *zb, T *dhdx, T *dzsdx)</argsstring>
        <name>conserveElevationGHTop</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ib</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibTL</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibTR</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dhdx</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dzsdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="1060" column="18" bodyfile="src/ConserveElevation.cu" bodystart="1060" bodyend="1122"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1ab7e3dcbd9d6430b478332453abc2dcb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void conserveElevationGHTop</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, T *h, T *zs, T *zb, T *dhdx, T *dzsdx)</argsstring>
        <name>conserveElevationGHTop</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dhdx</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dzsdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="1124" column="29" bodyfile="src/ConserveElevation.cu" bodystart="1124" bodyend="1189"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a60d5a2b2be409f6592ab1e4dbccafb09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void conserveElevationGHBot</definition>
        <argsstring>(Param XParam, int ib, int ibBL, int ibBR, BlockP&lt; T &gt; XBlock, T *h, T *zs, T *zb, T *dhdx, T *dzsdx)</argsstring>
        <name>conserveElevationGHBot</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ib</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibBL</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibBR</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dhdx</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dzsdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="1191" column="18" bodyfile="src/ConserveElevation.cu" bodystart="1191" bodyend="1254"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a4bad624baf2f3c344602de9295b9b436" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void conserveElevationGHBot</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, T *h, T *zs, T *zb, T *dhdx, T *dzsdx)</argsstring>
        <name>conserveElevationGHBot</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zs</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dhdx</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>dzsdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="1256" column="29" bodyfile="src/ConserveElevation.cu" bodystart="1256" bodyend="1321"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1afc1cff5d5122df41b6b03e393ac7d8fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void conserveElevationLeft</definition>
        <argsstring>(Param XParam, int ib, int ibLB, int ibLT, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; XEv, T *zb)</argsstring>
        <name>conserveElevationLeft</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ib</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibLB</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibLT</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="1323" column="18" bodyfile="src/ConserveElevation.cu" bodystart="1323" bodyend="1383"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1ad9c8cfc185863fb0f56a95a2a18839b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void conserveElevationLeft</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; XEv, T *zb)</argsstring>
        <name>conserveElevationLeft</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="1385" column="29" bodyfile="src/ConserveElevation.cu" bodystart="1385" bodyend="1446"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1ae9e7438ddefaa3369f29996987a19d01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void WetDryProlongationGPULeft</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; XEv, T *zb)</argsstring>
        <name>WetDryProlongationGPULeft</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="1448" column="29" bodyfile="src/ConserveElevation.cu" bodystart="1448" bodyend="1488"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a1e8aea1a6136e5460eb73ed906f8d5f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void WetDryRestrictionGPULeft</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; XEv, T *zb)</argsstring>
        <name>WetDryRestrictionGPULeft</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="1490" column="29" bodyfile="src/ConserveElevation.cu" bodystart="1490" bodyend="1526"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1abb579b1211c3e5b43dd55dff4fc9cbe6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void conserveElevationRight</definition>
        <argsstring>(Param XParam, int ib, int ibRB, int ibRT, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; XEv, T *zb)</argsstring>
        <name>conserveElevationRight</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ib</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibRB</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibRT</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="1529" column="18" bodyfile="src/ConserveElevation.cu" bodystart="1529" bodyend="1575"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1ae1a90f767d2fcad2b1805894ab58bd9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void conserveElevationRight</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; XEv, T *zb)</argsstring>
        <name>conserveElevationRight</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="1577" column="29" bodyfile="src/ConserveElevation.cu" bodystart="1577" bodyend="1640"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1ac3ffb93a73b4daaa2ffb392c86855f63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void WetDryProlongationGPURight</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; XEv, T *zb)</argsstring>
        <name>WetDryProlongationGPURight</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="1642" column="29" bodyfile="src/ConserveElevation.cu" bodystart="1642" bodyend="1682"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a45b87745d429894acd012f5d60aeeb3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void WetDryRestrictionGPURight</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; XEv, T *zb)</argsstring>
        <name>WetDryRestrictionGPURight</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="1684" column="29" bodyfile="src/ConserveElevation.cu" bodystart="1684" bodyend="1721"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a950109b9337dddca66b220ef9b46e4de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void conserveElevationTop</definition>
        <argsstring>(Param XParam, int ib, int ibTL, int ibTR, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; XEv, T *zb)</argsstring>
        <name>conserveElevationTop</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ib</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibTL</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibTR</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="1723" column="18" bodyfile="src/ConserveElevation.cu" bodystart="1723" bodyend="1772"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a5ccd8135fce98d59fd051ccb77b1aabb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void conserveElevationTop</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; XEv, T *zb)</argsstring>
        <name>conserveElevationTop</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="1774" column="29" bodyfile="src/ConserveElevation.cu" bodystart="1774" bodyend="1835"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a4bd6eb5f83ea7c7448f03941178d58d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void WetDryProlongationGPUTop</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; XEv, T *zb)</argsstring>
        <name>WetDryProlongationGPUTop</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="1837" column="29" bodyfile="src/ConserveElevation.cu" bodystart="1837" bodyend="1876"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1ad519fdc6d94a14f008a25eba1f9591c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void WetDryRestrictionGPUTop</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; XEv, T *zb)</argsstring>
        <name>WetDryRestrictionGPUTop</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="1878" column="29" bodyfile="src/ConserveElevation.cu" bodystart="1878" bodyend="1916"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a048c11c064fc6cb003b9bea36be0870c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void conserveElevationBot</definition>
        <argsstring>(Param XParam, int ib, int ibBL, int ibBR, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; XEv, T *zb)</argsstring>
        <name>conserveElevationBot</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ib</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibBL</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ibBR</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="1918" column="18" bodyfile="src/ConserveElevation.cu" bodystart="1918" bodyend="1968"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a0939d280e64f70ef9bc0d354bb0ff6a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void conserveElevationBot</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; XEv, T *zb)</argsstring>
        <name>conserveElevationBot</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="1971" column="29" bodyfile="src/ConserveElevation.cu" bodystart="1971" bodyend="2036"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1afd4a6261211e3a6fa8232d77c6891d52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void WetDryProlongationGPUBot</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; XEv, T *zb)</argsstring>
        <name>WetDryProlongationGPUBot</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="2038" column="29" bodyfile="src/ConserveElevation.cu" bodystart="2038" bodyend="2084"/>
      </memberdef>
      <memberdef kind="function" id="ConserveElevation_8cu_1a9a7c2909f97ad96f9a769e9ecfe2d3cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void WetDryRestrictionGPUBot</definition>
        <argsstring>(Param XParam, BlockP&lt; T &gt; XBlock, EvolvingP&lt; T &gt; XEv, T *zb)</argsstring>
        <name>WetDryRestrictionGPUBot</name>
        <param>
          <type><ref refid="classParam" kindref="compound">Param</ref></type>
          <declname>XParam</declname>
        </param>
        <param>
          <type><ref refid="structBlockP" kindref="compound">BlockP</ref>&lt; T &gt;</type>
          <declname>XBlock</declname>
        </param>
        <param>
          <type><ref refid="structEvolvingP" kindref="compound">EvolvingP</ref>&lt; T &gt;</type>
          <declname>XEv</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>zb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ConserveElevation.cu" line="2087" column="29" bodyfile="src/ConserveElevation.cu" bodystart="2087" bodyend="2130"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;ConserveElevation.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevation(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>XEv,<sp/>T*<sp/>zb)</highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibl<sp/>=<sp/>0;<sp/>ibl<sp/>&lt;<sp/>XParam.nblk;<sp/>ibl++)</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ib<sp/>=<sp/>XBlock.active[ibl];</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>ii<sp/>=<sp/>memloc(XParam,<sp/>-1,<sp/>5,<sp/>46);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevationLeft(XParam,<sp/>ib,<sp/>XBlock.LeftBot[ib],<sp/>XBlock.LeftTop[ib],<sp/>XBlock,<sp/>XEv,<sp/>zb);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevationRight(XParam,<sp/>ib,<sp/>XBlock.RightBot[ib],<sp/>XBlock.RightTop[ib],<sp/>XBlock,<sp/>XEv,<sp/>zb);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevationTop(XParam,<sp/>ib,<sp/>XBlock.TopLeft[ib],<sp/>XBlock.TopRight[ib],<sp/>XBlock,<sp/>XEv,<sp/>zb);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevationBot(XParam,<sp/>ib,<sp/>XBlock.BotLeft[ib],<sp/>XBlock.BotRight[ib],<sp/>XBlock,<sp/>XEv,<sp/>zb);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevation&lt;float&gt;(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;float&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;float&gt;</ref><sp/>XEv,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>zb);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevation&lt;double&gt;(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;double&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;double&gt;</ref><sp/>XEv,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>zb);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationGPU(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>XEv,<sp/>T*<sp/>zb)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>dim3<sp/>blockDimHaloLR(1,<sp/>16,<sp/>1);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>dim3<sp/>blockDimHaloBT(16,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>dim3<sp/>gridDim(XParam.nblk,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>conserveElevationLeft<sp/>&lt;&lt;&lt;gridDim,<sp/>blockDimHaloLR,<sp/>0<sp/>&gt;&gt;&gt;<sp/>(XParam,<sp/>XBlock,<sp/>XEv,<sp/>zb);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>CUDA_CHECK(cudaDeviceSynchronize());</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>conserveElevationRight<sp/>&lt;&lt;&lt;gridDim,<sp/>blockDimHaloLR,<sp/>0<sp/>&gt;&gt;&gt;<sp/>(XParam,<sp/>XBlock,<sp/>XEv,<sp/>zb);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>CUDA_CHECK(cudaDeviceSynchronize());</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>conserveElevationTop<sp/>&lt;&lt;&lt;gridDim,<sp/>blockDimHaloBT,<sp/>0<sp/>&gt;&gt;&gt;<sp/>(XParam,<sp/>XBlock,<sp/>XEv,<sp/>zb);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>CUDA_CHECK(cudaDeviceSynchronize());</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>conserveElevationBot<sp/>&lt;&lt;&lt;gridDim,<sp/>blockDimHaloBT,<sp/>0<sp/>&gt;&gt;&gt;<sp/>(XParam,<sp/>XBlock,<sp/>XEv,<sp/>zb);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>CUDA_CHECK(cudaDeviceSynchronize());</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationGPU&lt;float&gt;(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;float&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;float&gt;</ref><sp/>XEv,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>zb);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationGPU&lt;double&gt;(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;double&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;double&gt;</ref><sp/>XEv,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>zb);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WetDryProlongation(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>XEv,<sp/>T*<sp/>zb)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib,<sp/>ibLB,<sp/>ibTL,<sp/>ibBL,<sp/>ibRB,ibn;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibl<sp/>=<sp/>0;<sp/>ibl<sp/>&lt;<sp/>XParam.nblk;<sp/>ibl++)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ib<sp/>=<sp/>XBlock.active[ibl];</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibLB<sp/>=<sp/>XBlock.LeftBot[ib];</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibRB<sp/>=<sp/>XBlock.RightBot[ib];</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibTL<sp/>=<sp/>XBlock.TopLeft[ib];</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibBL<sp/>=<sp/>XBlock.BotLeft[ib];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Left<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&gt;<sp/>XBlock.level[ibLB])</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prolongation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>XParam.blkwidth;<sp/>j++)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibLB;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//il<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jl<sp/>=<sp/>j;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>XParam.blkwidth<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>XBlock.RightBot[ibLB]<sp/>==<sp/>ib<sp/>?<sp/>ftoi(floor(j<sp/>*<sp/>T(0.5)))<sp/>:<sp/>ftoi(floor(j<sp/>*<sp/>T(0.5))<sp/>+<sp/>XParam.blkwidth<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//im<sp/>=<sp/>ip;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jm<sp/>=<sp/>ceil(j<sp/>*<sp/>T(0.5))<sp/>*<sp/>2<sp/>&gt;<sp/>j<sp/>?<sp/>jp<sp/>+<sp/>1<sp/>:<sp/>jp<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProlongationElevation(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Right<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&gt;<sp/>XBlock.level[ibRB])</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prolongation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>XParam.blkwidth;<sp/>j++)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>XParam.blkwidth;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibRB;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//il<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jl<sp/>=<sp/>j;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>XBlock.LeftBot[ibn]<sp/>==<sp/>ib<sp/>?<sp/>ftoi(floor(j<sp/>*<sp/>T(0.5)))<sp/>:<sp/>ftoi(floor(j<sp/>*<sp/>T(0.5))<sp/>+<sp/>XParam.blkwidth<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//im<sp/>=<sp/>ip;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jm<sp/>=<sp/>ceil(j<sp/>*<sp/>T(0.5))<sp/>*<sp/>2<sp/>&gt;<sp/>j<sp/>?<sp/>jp<sp/>+<sp/>1<sp/>:<sp/>jp<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProlongationElevation(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Top<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&gt;<sp/>XBlock.level[ibTL])</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>XParam.blkwidth;<sp/>i++)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>XParam.blkwidth;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibTL;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//il<sp/>=<sp/>i;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jl<sp/>=<sp/>XParam.blkwidth<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>XBlock.BotLeft[ibn]<sp/>==<sp/>ib<sp/>?<sp/>ftoi(floor(i<sp/>*<sp/>T(0.5)))<sp/>:<sp/>ftoi(floor(i<sp/>*<sp/>T(0.5))<sp/>+<sp/>XParam.blkwidth<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jm<sp/>=<sp/>jp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//im<sp/>=<sp/>ceil(i<sp/>*<sp/>T(0.5))<sp/>*<sp/>2<sp/>&gt;<sp/>i<sp/>?<sp/>ip<sp/>+<sp/>1<sp/>:<sp/>ip<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProlongationElevation(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bot<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&gt;<sp/>XBlock.level[ibBL])</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>XParam.blkwidth;<sp/>i++)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibBL;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//il<sp/>=<sp/>i;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jl<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>XParam.blkwidth<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>XBlock.TopLeft[ibn]<sp/>==<sp/>ib<sp/>?<sp/>ftoi(floor(i<sp/>*<sp/>T(0.5)))<sp/>:<sp/>ftoi(floor(i<sp/>*<sp/>T(0.5))<sp/>+<sp/>XParam.blkwidth<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jm<sp/>=<sp/>jp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//im<sp/>=<sp/>ceil(i<sp/>*<sp/>T(0.5))<sp/>*<sp/>2<sp/>&gt;<sp/>i<sp/>?<sp/>ip<sp/>+<sp/>1<sp/>:<sp/>ip<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProlongationElevation(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WetDryProlongation&lt;double&gt;(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;double&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;double&gt;</ref><sp/>XEv,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>zb);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WetDryProlongation&lt;float&gt;(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;float&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;float&gt;</ref><sp/>XEv,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>zb);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WetDryRestriction(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>XEv,<sp/>T*<sp/>zb)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib,<sp/>ibLB,<sp/>ibTL,<sp/>ibBL,<sp/>ibRB,<sp/>ibLT,<sp/>ibRT,<sp/>ibTR,<sp/>ibBR,<sp/>ibn;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/>jhalo,<sp/>ir,<sp/>jr,<sp/>lev;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibl<sp/>=<sp/>0;<sp/>ibl<sp/>&lt;<sp/>XParam.nblk;<sp/>ibl++)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ib<sp/>=<sp/>XBlock.active[ibl];</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibLB<sp/>=<sp/>XBlock.LeftBot[ib];</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibLT<sp/>=<sp/>XBlock.LeftTop[ib];</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibRB<sp/>=<sp/>XBlock.RightBot[ib];</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibRT<sp/>=<sp/>XBlock.RightTop[ib];</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibTL<sp/>=<sp/>XBlock.TopLeft[ib];</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibTR<sp/>=<sp/>XBlock.TopRight[ib];</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibBL<sp/>=<sp/>XBlock.BotLeft[ib];</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibBR<sp/>=<sp/>XBlock.BotRight[ib];</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lev<sp/>=<sp/>XBlock.level[ib];</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Left<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ir<sp/>=<sp/>XParam.blkwidth<sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&lt;<sp/>XBlock.level[ibLB])</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iy<sp/>=<sp/>0;<sp/>iy<sp/>&lt;<sp/>(XParam.blkwidth<sp/>/<sp/>2);<sp/>iy++)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>iy;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibLB;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jr<sp/>=<sp/>iy<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wetdryrestriction(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ir,<sp/>jr,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&lt;<sp/>XBlock.level[ibLT])</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iy<sp/>=<sp/>(XParam.blkwidth<sp/>/<sp/>2);<sp/>iy<sp/>&lt;<sp/>XParam.blkwidth;<sp/>iy++)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>iy;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibLT;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jr<sp/>=<sp/>(iy<sp/>-<sp/>(XParam.blkwidth<sp/>/<sp/>2))<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wetdryrestriction(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ir,<sp/>jr,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Right<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>XParam.blkwidth;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ir<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&lt;<sp/>XBlock.level[ibRB]<sp/>)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iy<sp/>=<sp/>0;<sp/>iy<sp/>&lt;<sp/>(XParam.blkwidth<sp/>/<sp/>2);<sp/>iy++)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>iy;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibRB;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jr<sp/>=<sp/>iy<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wetdryrestriction(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ir,<sp/>jr,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&lt;<sp/>XBlock.level[ibRT]<sp/>)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iy<sp/>=<sp/>(XParam.blkwidth<sp/>/<sp/>2);<sp/>iy<sp/>&lt;<sp/>XParam.blkwidth;<sp/>iy++)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>iy;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibRT;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jr<sp/>=<sp/>(iy<sp/>-<sp/>(XParam.blkwidth<sp/>/<sp/>2))<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wetdryrestriction(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ir,<sp/>jr,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Top<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>XParam.blkwidth;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&lt;<sp/>XBlock.level[ibTL]<sp/>)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix<sp/>=<sp/>0;<sp/>ix<sp/>&lt;<sp/>(XParam.blkwidth<sp/>/<sp/>2);<sp/>ix++)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>ix;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibTL;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ir<sp/>=<sp/>ix<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wetdryrestriction(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ir,<sp/>jr,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&lt;<sp/>XBlock.level[ibTR]<sp/>)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix<sp/>=<sp/>(XParam.blkwidth<sp/>/<sp/>2);<sp/>ix<sp/>&lt;<sp/>XParam.blkwidth;<sp/>ix++)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>ix;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibTR;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ir<sp/>=<sp/>(ix<sp/>-<sp/>(XParam.blkwidth<sp/>/<sp/>2))<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wetdryrestriction(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ir,<sp/>jr,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bot<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jr<sp/>=<sp/>XParam.blkwidth<sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&lt;<sp/>XBlock.level[ibBL]<sp/>)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix<sp/>=<sp/>0;<sp/>ix<sp/>&lt;<sp/>(XParam.blkwidth<sp/>/<sp/>2);<sp/>ix++)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>ix;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibBL;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ir<sp/>=<sp/>ix<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wetdryrestriction(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ir,<sp/>jr,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&lt;<sp/>XBlock.level[ibBR]<sp/>)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix<sp/>=<sp/>(XParam.blkwidth<sp/>/<sp/>2);<sp/>ix<sp/>&lt;<sp/>XParam.blkwidth;<sp/>ix++)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>ix;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibBR;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ir<sp/>=<sp/>(ix<sp/>-<sp/>(XParam.blkwidth<sp/>/<sp/>2))<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wetdryrestriction(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ir,<sp/>jr,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WetDryRestriction&lt;double&gt;(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;double&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;double&gt;</ref><sp/>XEv,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>zb);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WetDryRestriction&lt;float&gt;(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;float&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;float&gt;</ref><sp/>XEv,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>zb);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WetDryProlongationGPU(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>XEv,<sp/>T*<sp/>zb)</highlight></codeline>
<codeline lineno="325"><highlight class="normal">{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>dim3<sp/>blockDimHaloLR(1,<sp/>16,<sp/>1);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>dim3<sp/>blockDimHaloBT(16,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>dim3<sp/>gridDim(XParam.nblk,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//WetDryProlongationGPUBot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>WetDryProlongationGPULeft<sp/>&lt;&lt;&lt;gridDim,<sp/>blockDimHaloLR,<sp/>0<sp/>&gt;&gt;&gt;<sp/>(XParam,<sp/>XBlock,<sp/>XEv,<sp/>zb);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>CUDA_CHECK(cudaDeviceSynchronize());</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>WetDryProlongationGPURight<sp/>&lt;&lt;&lt;gridDim,<sp/>blockDimHaloLR,<sp/>0<sp/>&gt;&gt;&gt;<sp/>(XParam,<sp/>XBlock,<sp/>XEv,<sp/>zb);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>CUDA_CHECK(cudaDeviceSynchronize());</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>WetDryProlongationGPUTop<sp/>&lt;&lt;&lt;gridDim,<sp/>blockDimHaloBT,<sp/>0<sp/>&gt;&gt;&gt;<sp/>(XParam,<sp/>XBlock,<sp/>XEv,<sp/>zb);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>CUDA_CHECK(cudaDeviceSynchronize());</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>WetDryProlongationGPUBot<sp/>&lt;&lt;&lt;gridDim,<sp/>blockDimHaloBT,<sp/>0<sp/>&gt;&gt;&gt;<sp/>(XParam,<sp/>XBlock,<sp/>XEv,<sp/>zb);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>CUDA_CHECK(cudaDeviceSynchronize());</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WetDryProlongationGPU&lt;double&gt;(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;double&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;double&gt;</ref><sp/>XEv,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>zb);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WetDryProlongationGPU&lt;float&gt;(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;float&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;float&gt;</ref><sp/>XEv,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>zb);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WetDryRestrictionGPU(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>XEv,<sp/>T*<sp/>zb)</highlight></codeline>
<codeline lineno="346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>dim3<sp/>blockDimHaloLR(1,<sp/>16,<sp/>1);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>dim3<sp/>blockDimHaloBT(16,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>dim3<sp/>gridDim(XParam.nblk,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//WetDryProlongationGPUBot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>WetDryRestrictionGPULeft<sp/>&lt;&lt;&lt;gridDim,<sp/>blockDimHaloLR,<sp/>0<sp/>&gt;&gt;&gt;<sp/>(XParam,<sp/>XBlock,<sp/>XEv,<sp/>zb);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>CUDA_CHECK(cudaDeviceSynchronize());</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>WetDryRestrictionGPURight<sp/>&lt;&lt;&lt;gridDim,<sp/>blockDimHaloLR,<sp/>0<sp/>&gt;&gt;&gt;<sp/>(XParam,<sp/>XBlock,<sp/>XEv,<sp/>zb);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>CUDA_CHECK(cudaDeviceSynchronize());</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>WetDryRestrictionGPUTop<sp/>&lt;&lt;&lt;gridDim,<sp/>blockDimHaloBT,<sp/>0<sp/>&gt;&gt;&gt;<sp/>(XParam,<sp/>XBlock,<sp/>XEv,<sp/>zb);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>CUDA_CHECK(cudaDeviceSynchronize());</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>WetDryRestrictionGPUBot<sp/>&lt;&lt;&lt;gridDim,<sp/>blockDimHaloBT,<sp/>0<sp/>&gt;&gt;&gt;<sp/>(XParam,<sp/>XBlock,<sp/>XEv,<sp/>zb);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>CUDA_CHECK(cudaDeviceSynchronize());</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WetDryRestrictionGPU&lt;double&gt;(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;double&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;double&gt;</ref><sp/>XEv,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>zb);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WetDryRestrictionGPU&lt;float&gt;(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;float&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;float&gt;</ref><sp/>XEv,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>zb);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ProlongationElevation(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>halowidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkmemwidth,<sp/>T<sp/>eps,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jhalo,<sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ip,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jp,<sp/>T*<sp/>h,<sp/>T*<sp/>zs,<sp/>T*<sp/>zb)</highlight></codeline>
<codeline lineno="367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>halo;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pp<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip,<sp/>jp,<sp/>ibn);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ll<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>il,<sp/>jl,<sp/>ib);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mm<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>im,<sp/>jm,<sp/>ibn);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>halo<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ihalo,<sp/>jhalo,<sp/>ib);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>if<sp/>parent<sp/>is<sp/>dry<sp/>or<sp/>any<sp/>of<sp/>close<sp/>neighbour</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii,<sp/>left,<sp/>right,<sp/>top,<sp/>bot;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>ii<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip,<sp/>jp,<sp/>ibn);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>left<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip<sp/>-<sp/>1,<sp/>jp,<sp/>ibn);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>right<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip<sp/>+<sp/>1,<sp/>jp,<sp/>ibn);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>top<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip,<sp/>jp<sp/>+<sp/>1,<sp/>ibn);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>bot<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip,<sp/>jp<sp/>-<sp/>1,<sp/>ibn);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(!(h[ll]<sp/>&gt;<sp/>eps<sp/>&amp;&amp;<sp/>h[halo]&gt;eps<sp/>&amp;&amp;<sp/>h[pp]<sp/>&gt;<sp/>eps<sp/>&amp;&amp;<sp/>h[mm]<sp/>&gt;<sp/>eps))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(h[ii]<sp/>&gt;<sp/>eps<sp/>&amp;&amp;<sp/>h[left]<sp/>&gt;<sp/>eps<sp/>&amp;&amp;<sp/>h[right]<sp/>&gt;<sp/>eps<sp/>&amp;&amp;<sp/>h[top]<sp/>&gt;<sp/>eps<sp/>&amp;&amp;<sp/>h[bot]<sp/>&gt;<sp/>eps))</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//h[halo]<sp/>=<sp/>utils::max(T(0.0),<sp/>zs[pp]<sp/>-<sp/>zb[halo]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//zs[halo]<sp/>=<sp/>h[halo]<sp/>+<sp/>zb[halo];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h[halo]<sp/>=<sp/>h[ii];</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zb[halo]<sp/>=<sp/>zb[ii];</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zs[halo]<sp/>=<sp/>zs[ii];</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RevertProlongationElevation(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>halowidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkmemwidth,<sp/>T<sp/>eps,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jhalo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ip,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/>T<sp/>dx,<sp/>T*<sp/>h,<sp/>T*<sp/>zb,<sp/>T*<sp/>dzbdx,<sp/>T*<sp/>dzbdy)</highlight></codeline>
<codeline lineno="401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>halo;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pp<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip,<sp/>jp,<sp/>ibn);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ll<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>il,<sp/>jl,<sp/>ib);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mm<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>im,<sp/>jm,<sp/>ibn);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>halo<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ihalo,<sp/>jhalo,<sp/>ib);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>if<sp/>parent<sp/>is<sp/>dry<sp/>or<sp/>any<sp/>of<sp/>close<sp/>neighbour</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii,<sp/>left,<sp/>right,<sp/>top,<sp/>bot;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>ii<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip,<sp/>jp,<sp/>ibn);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>left<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip<sp/>-<sp/>1,<sp/>jp,<sp/>ibn);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>right<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip<sp/>+<sp/>1,<sp/>jp,<sp/>ibn);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>top<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip,<sp/>jp<sp/>+<sp/>1,<sp/>ibn);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>bot<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip,<sp/>jp<sp/>-<sp/>1,<sp/>ibn);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>ilevdx<sp/>=<sp/>calcres(dx,<sp/>level)<sp/>*<sp/>T(0.5);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>facbt,<sp/>faclr;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(!(h[ll]<sp/>&gt;<sp/>eps<sp/>&amp;&amp;<sp/>h[halo]&gt;eps<sp/>&amp;&amp;<sp/>h[pp]<sp/>&gt;<sp/>eps<sp/>&amp;&amp;<sp/>h[mm]<sp/>&gt;<sp/>eps))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(h[ii]<sp/>&gt;<sp/>eps<sp/>&amp;&amp;<sp/>h[left]<sp/>&gt;<sp/>eps<sp/>&amp;&amp;<sp/>h[right]<sp/>&gt;<sp/>eps<sp/>&amp;&amp;<sp/>h[top]<sp/>&gt;<sp/>eps<sp/>&amp;&amp;<sp/>h[bot]<sp/>&gt;<sp/>eps))</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ihalo<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>faclr<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>facbt<sp/>=<sp/>floor(jhalo<sp/>*<sp/>(T)0.5)<sp/>*<sp/>T(2.0)<sp/>&lt;<sp/>(jhalo<sp/>-<sp/>T(0.01))<sp/>?<sp/>1.0<sp/>:<sp/>-1.0;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ihalo<sp/>==<sp/>16)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>faclr<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>facbt<sp/>=<sp/>floor(jhalo<sp/>*<sp/>(T)0.5)<sp/>*<sp/>T(2.0)<sp/>&lt;<sp/>(jhalo<sp/>-<sp/>T(0.01))<sp/>?<sp/>1.0<sp/>:<sp/>-1.0;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jhalo<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>facbt<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>facbt<sp/>=<sp/>floor(ihalo<sp/>*<sp/>(T)0.5)<sp/>*<sp/>T(2.0)<sp/>&lt;<sp/>(ihalo<sp/>-<sp/>T(0.01))<sp/>?<sp/>1.0<sp/>:<sp/>-1.0;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jhalo<sp/>==<sp/>16)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>facbt<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>facbt<sp/>=<sp/>floor(ihalo<sp/>*<sp/>(T)0.5)<sp/>*<sp/>T(2.0)<sp/>&lt;<sp/>(ihalo<sp/>-<sp/>T(0.01))<sp/>?<sp/>1.0<sp/>:<sp/>-1.0;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//h[halo]<sp/>=<sp/>utils::max(T(0.0),<sp/>zs[pp]<sp/>-<sp/>zb[halo]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//zs[halo]<sp/>=<sp/>h[halo]<sp/>+<sp/>zb[halo];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zb[halo]<sp/>=<sp/>zb[ii]<sp/>+<sp/>(faclr<sp/>*<sp/>dzbdx[ii]<sp/>+<sp/>facbt<sp/>*<sp/>dzbdy[ii])<sp/>*<sp/>ilevdx;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ProlongationElevationGH(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>halowidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkmemwidth,<sp/>T<sp/>eps,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jhalo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ip,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jp,<sp/>T*<sp/>h,<sp/>T*<sp/>dhdx,<sp/>T*<sp/>dzsdx)</highlight></codeline>
<codeline lineno="457"><highlight class="normal">{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>halo;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pp<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip,<sp/>jp,<sp/>ibn);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ll<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>il,<sp/>jl,<sp/>ib);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mm<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>im,<sp/>jm,<sp/>ibn);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>halo<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ihalo,<sp/>jhalo,<sp/>ib);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>if<sp/>parent<sp/>is<sp/>dry<sp/>or<sp/>any<sp/>of<sp/>close<sp/>neighbour</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii,<sp/>left,<sp/>right,<sp/>top,<sp/>bot;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>ii<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip,<sp/>jp,<sp/>ibn);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>left<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip<sp/>-<sp/>1,<sp/>jp,<sp/>ibn);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>right<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip<sp/>+<sp/>1,<sp/>jp,<sp/>ibn);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>top<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip,<sp/>jp<sp/>+<sp/>1,<sp/>ibn);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>bot<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip,<sp/>jp<sp/>-<sp/>1,<sp/>ibn);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(!(h[ll]<sp/>&gt;<sp/>eps<sp/>&amp;&amp;<sp/>h[halo]<sp/>&gt;<sp/>eps<sp/>&amp;&amp;<sp/>h[pp]<sp/>&gt;<sp/>eps<sp/>&amp;&amp;<sp/>h[mm]<sp/>&gt;<sp/>eps))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(h[ii]<sp/>&gt;<sp/>eps<sp/>&amp;&amp;<sp/>h[left]<sp/>&gt;<sp/>eps<sp/>&amp;&amp;<sp/>h[right]<sp/>&gt;<sp/>eps<sp/>&amp;&amp;<sp/>h[top]<sp/>&gt;<sp/>eps<sp/>&amp;&amp;<sp/>h[bot]<sp/>&gt;<sp/>eps))</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dhdx[halo]<sp/>=<sp/>T(0.0);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dzsdx[halo]<sp/>=<sp/>T(0.0);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevation(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>halowidth,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkmemwidth,T<sp/>eps,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibn,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jhalo<sp/>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/>T*<sp/>h,<sp/>T*<sp/>zs,<sp/>T<sp/>*<sp/>zb)</highlight></codeline>
<codeline lineno="486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii,<sp/>ir,<sp/>it,<sp/>itr;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>iiwet,<sp/>irwet,<sp/>itwet,<sp/>itrwet;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>zswet,<sp/>hwet;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>write;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>write<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ihalo,<sp/>jhalo,<sp/>ib);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>ii<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>i,<sp/>j,<sp/>ibn);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>ir<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>i<sp/>+<sp/>1,<sp/>j,<sp/>ibn);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>i,<sp/>j<sp/>+<sp/>1,<sp/>ibn);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>itr<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>i<sp/>+<sp/>1,<sp/>j<sp/>+<sp/>1,<sp/>ibn);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>iiwet<sp/>=<sp/>h[ii]<sp/>&gt;<sp/>eps<sp/>?<sp/>h[ii]<sp/>:<sp/>T(0.0);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>irwet<sp/>=<sp/>h[ir]<sp/>&gt;<sp/>eps<sp/>?<sp/>h[ir]<sp/>:<sp/>T(0.0);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>itwet<sp/>=<sp/>h[it]<sp/>&gt;<sp/>eps<sp/>?<sp/>h[it]<sp/>:<sp/>T(0.0);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>itrwet<sp/>=<sp/>h[itr]<sp/>&gt;<sp/>eps<sp/>?<sp/>h[itr]<sp/>:<sp/>T(0.0);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>hwet<sp/>=<sp/>(iiwet<sp/>+<sp/>irwet<sp/>+<sp/>itwet<sp/>+<sp/>itrwet);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>zswet<sp/>=<sp/>iiwet<sp/>*<sp/>(zb[ii]<sp/>+<sp/>h[ii])<sp/>+<sp/>irwet<sp/>*<sp/>(zb[ir]<sp/>+<sp/>h[ir])<sp/>+<sp/>itwet<sp/>*<sp/>(zb[it]<sp/>+<sp/>h[it])<sp/>+<sp/>itrwet<sp/>*<sp/>(zb[itr]<sp/>+<sp/>h[itr]);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevation(zb[write],<sp/>zswet,<sp/>hwet);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hwet<sp/>&gt;<sp/>T(0.0))</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zswet<sp/>=<sp/>zswet<sp/>/<sp/>hwet;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hwet<sp/>=<sp/>utils::max(T(0.0),<sp/>zswet<sp/>-<sp/>zb[write]);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hwet<sp/>=<sp/>T(0.0);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//zswet<sp/>=<sp/>hwet<sp/>+<sp/>zb;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>h[write]<sp/>=<sp/>hwet;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>zs[write]<sp/>=<sp/>hwet<sp/>+<sp/>zb[write];</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevation&lt;float&gt;(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>halowidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkmemwidth,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>eps,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jhalo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>h,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>zs,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>zb);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevation&lt;double&gt;(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>halowidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkmemwidth,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jhalo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>h,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>zs,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>zb);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>wetdryrestriction(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>halowidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkmemwidth,<sp/>T<sp/>eps,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jhalo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/>T*<sp/>h,<sp/>T*<sp/>zs,<sp/>T*<sp/>zb)</highlight></codeline>
<codeline lineno="532"><highlight class="normal">{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii,<sp/>ir,<sp/>it,<sp/>itr;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>iiwet,<sp/>irwet,<sp/>itwet,<sp/>itrwet;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>zswet,<sp/>hwet,<sp/>cwet,<sp/>zbw;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>write;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>write<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ihalo,<sp/>jhalo,<sp/>ib);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>ii<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>i,<sp/>j,<sp/>ibn);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>ir<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>i<sp/>+<sp/>1,<sp/>j,<sp/>ibn);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>i,<sp/>j<sp/>+<sp/>1,<sp/>ibn);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>itr<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>i<sp/>+<sp/>1,<sp/>j<sp/>+<sp/>1,<sp/>ibn);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>hii,<sp/>hir,<sp/>hit,<sp/>hitr;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>hii<sp/>=<sp/>h[ii];</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>hir<sp/>=<sp/>h[ir];</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>hit<sp/>=<sp/>h[it];</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>hitr<sp/>=<sp/>h[itr];</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>zbw<sp/>=<sp/>zb[write];</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>iiwet<sp/>=<sp/>hii<sp/>&gt;<sp/>eps<sp/>?<sp/>T(1.0)<sp/>:<sp/>T(0.0);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>irwet<sp/>=<sp/>hir<sp/>&gt;<sp/>eps<sp/>?<sp/>T(1.0)<sp/>:<sp/>T(0.0);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>itwet<sp/>=<sp/>hit<sp/>&gt;<sp/>eps<sp/>?<sp/>T(1.0)<sp/>:<sp/>T(0.0);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>itrwet<sp/>=<sp/>hitr<sp/>&gt;<sp/>eps<sp/>?<sp/>T(1.0)<sp/>:<sp/>T(0.0);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>cwet<sp/>=<sp/>(iiwet<sp/>+<sp/>irwet<sp/>+<sp/>itwet<sp/>+<sp/>itrwet);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>hwet<sp/>=<sp/>(iiwet*hii<sp/>+<sp/>irwet*hir<sp/>+<sp/>itwet*hit<sp/>+<sp/>itrwet*hitr);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>zswet<sp/>=<sp/>(iiwet*hii)<sp/>*<sp/>(zb[ii]<sp/>+<sp/>h[ii])<sp/>+<sp/>(irwet*hir)<sp/>*<sp/>(zb[ir]<sp/>+<sp/>h[ir])<sp/>+<sp/>(itwet*hit)<sp/>*<sp/>(zb[it]<sp/>+<sp/>h[it])<sp/>+<sp/>(itrwet<sp/>*<sp/>hitr)<sp/>*<sp/>(zb[itr]<sp/>+<sp/>h[itr]);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevation(zb[write],<sp/>zswet,<sp/>hwet);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cwet<sp/>&gt;<sp/>T(0.0)<sp/>&amp;&amp;<sp/>cwet<sp/>&lt;<sp/>T(4.0))</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zswet<sp/>=<sp/>zswet<sp/>/<sp/>hwet;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hwet<sp/>=<sp/>utils::max(T(0.0),<sp/>zswet<sp/>-<sp/>zbw);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h[write]<sp/>=<sp/>hwet;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//zs[write]<sp/>=<sp/>hwet<sp/>+<sp/>zbw;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//zswet<sp/>=<sp/>hwet<sp/>+<sp/>zb;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>wetdryrestriction&lt;float&gt;(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>halowidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkmemwidth,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>eps,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jhalo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>h,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>zs,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>zb);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>wetdryrestriction&lt;double&gt;(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>halowidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkmemwidth,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jhalo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>h,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>zs,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>zb);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevation(T<sp/>zb,<sp/>T&amp;<sp/>zswet,<sp/>T&amp;<sp/>hwet)</highlight></codeline>
<codeline lineno="589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hwet<sp/>&gt;<sp/>0.0)</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zswet<sp/>=<sp/>zswet<sp/>/<sp/>hwet;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hwet<sp/>=<sp/>utils::max(T(0.0),<sp/>zswet<sp/>-<sp/>zb);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hwet<sp/>=<sp/>T(0.0);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>zswet<sp/>=<sp/>hwet<sp/>+<sp/>zb;</highlight></codeline>
<codeline lineno="604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationGradHalo(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/>T*<sp/>h,<sp/>T*<sp/>zs,<sp/>T*<sp/>zb,<sp/>T*<sp/>dhdx,<sp/>T*<sp/>dzsdx,<sp/>T*<sp/>dhdy,<sp/>T*<sp/>dzsdy)</highlight></codeline>
<codeline lineno="607"><highlight class="normal">{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibl<sp/>=<sp/>0;<sp/>ibl<sp/>&lt;<sp/>XParam.nblk;<sp/>ibl++)</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ib<sp/>=<sp/>XBlock.active[ibl];</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevationGHLeft(XParam,<sp/>ib,<sp/>XBlock.LeftBot[ib],<sp/>XBlock.LeftTop[ib],<sp/>XBlock,<sp/>h,<sp/>zs,<sp/>zb,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevationGHRight(XParam,<sp/>ib,<sp/>XBlock.RightBot[ib],<sp/>XBlock.RightTop[ib],<sp/>XBlock,<sp/>h,<sp/>zs,<sp/>zb,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevationGHTop(XParam,<sp/>ib,<sp/>XBlock.TopLeft[ib],<sp/>XBlock.TopRight[ib],<sp/>XBlock,<sp/>h,<sp/>zs,<sp/>zb,<sp/>dhdy,<sp/>dzsdy);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevationGHBot(XParam,<sp/>ib,<sp/>XBlock.BotLeft[ib],<sp/>XBlock.BotRight[ib],<sp/>XBlock,<sp/>h,<sp/>zs,<sp/>zb,<sp/>dhdy,<sp/>dzsdy);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal">}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationGradHalo&lt;float&gt;(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;float&gt;</ref><sp/>XBlock,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>h,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>zs,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>zb,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>dhdx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>dzsdx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>dhdy,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>dzsdy);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationGradHalo&lt;double&gt;(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;double&gt;</ref><sp/>XBlock,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>h,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>zs,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>zb,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>dhdx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>dzsdx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>dhdy,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>dzsdy);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationGradHaloGPU(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/>T*<sp/>h,<sp/>T*<sp/>zs,<sp/>T*<sp/>zb,<sp/>T*<sp/>dhdx,<sp/>T*<sp/>dzsdx,<sp/>T*<sp/>dhdy,<sp/>T*<sp/>dzsdy)</highlight></codeline>
<codeline lineno="622"><highlight class="normal">{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>dim3<sp/>blockDimHaloLR(1,<sp/>16,<sp/>1);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>dim3<sp/>blockDimHaloBT(16,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>dim3<sp/>gridDim(XParam.nblk,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>conserveElevationGHLeft<sp/>&lt;&lt;&lt;gridDim,<sp/>blockDimHaloLR,<sp/>0<sp/>&gt;&gt;&gt;<sp/>(XParam,<sp/>XBlock,<sp/>h,<sp/>zs,<sp/>zb,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>CUDA_CHECK(cudaDeviceSynchronize());</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>conserveElevationGHRight<sp/>&lt;&lt;&lt;gridDim,<sp/>blockDimHaloLR,<sp/>0<sp/>&gt;&gt;&gt;<sp/>(XParam,<sp/>XBlock,<sp/>h,<sp/>zs,<sp/>zb,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>CUDA_CHECK(cudaDeviceSynchronize());</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>conserveElevationGHTop<sp/>&lt;&lt;&lt;gridDim,<sp/>blockDimHaloBT,<sp/>0<sp/>&gt;&gt;&gt;<sp/>(XParam,<sp/>XBlock,<sp/>h,<sp/>zs,<sp/>zb,<sp/>dhdy,<sp/>dzsdy);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>CUDA_CHECK(cudaDeviceSynchronize());</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>conserveElevationGHBot<sp/>&lt;&lt;&lt;gridDim,<sp/>blockDimHaloBT,<sp/>0<sp/>&gt;&gt;&gt;<sp/>(XParam,<sp/>XBlock,<sp/>h,<sp/>zs,<sp/>zb,<sp/>dhdy,<sp/>dzsdy);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>CUDA_CHECK(cudaDeviceSynchronize());</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationGradHaloGPU&lt;float&gt;(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;float&gt;</ref><sp/>XBlock,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>h,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>zs,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>zb,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>dhdx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>dzsdx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>dhdy,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>dzsdy);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationGradHaloGPU&lt;double&gt;(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;double&gt;</ref><sp/>XBlock,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>h,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>zs,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>zb,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>dhdx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>dzsdx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>dhdy,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>dzsdy);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationGradHalo(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>halowidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkmemwidth,<sp/>T<sp/>eps,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jhalo,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/>T*<sp/>h,<sp/>T*<sp/>dhdx,<sp/>T*<sp/>dhdy)</highlight></codeline>
<codeline lineno="644"><highlight class="normal">{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii,<sp/>ir,<sp/>it,<sp/>itr,<sp/>jj;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>write;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>write<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ihalo,<sp/>jhalo,<sp/>ib);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>ii<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>i,<sp/>j,<sp/>ibn);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>ir<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>i<sp/>+<sp/>1,<sp/>j,<sp/>ibn);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>i,<sp/>j<sp/>+<sp/>1,<sp/>ibn);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>itr<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>i<sp/>+<sp/>1,<sp/>j<sp/>+<sp/>1,<sp/>ibn);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h[write]<sp/>&lt;=<sp/>eps)</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Because<sp/>of<sp/>the<sp/>slope<sp/>limiter<sp/>the<sp/>average<sp/>slope<sp/>is<sp/>not<sp/>the<sp/>slope<sp/>of<sp/>the<sp/>averaged<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>seems<sp/>that<sp/>it<sp/>should<sp/>be<sp/>the<sp/>closest<sp/>to<sp/>zero<sp/>instead...<sp/>With<sp/>conserve<sp/>elevation<sp/>This<sp/>will<sp/>work<sp/>but<sp/>maybe<sp/>all<sp/>prolongation<sp/>need<sp/>to<sp/>be<sp/>applied<sp/>this<sp/>way<sp/>(?)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dhdy[write]<sp/>=<sp/>utils::nearest(utils::nearest(utils::nearest(dhdy[ii],<sp/>dhdy[ir]),<sp/>dhdy[it]),<sp/>dhdy[itr]);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dhdx[write]<sp/>=<sp/>utils::nearest(utils::nearest(utils::nearest(dhdx[ii],<sp/>dhdx[ir]),<sp/>dhdx[it]),<sp/>dhdx[itr]);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationGradHaloA(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>halowidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkmemwidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jhalo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ip,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iq,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jq,<sp/>T<sp/>theta,<sp/>T<sp/>delta,<sp/>T*<sp/>h,<sp/>T*<sp/>dhdx)</highlight></codeline>
<codeline lineno="665"><highlight class="normal">{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>pii,<sp/>pir,<sp/>pit,<sp/>pitr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>qii,<sp/>qir,<sp/>qit,<sp/>qitr;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>p,<sp/>q;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>s0,<sp/>s1,<sp/>s2;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>write,<sp/>pii;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>write<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ihalo,<sp/>jhalo,<sp/>ib);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>pii<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip,<sp/>jp,<sp/>ib);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pii<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip,<sp/>jp,<sp/>ibn);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pir<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip<sp/>+<sp/>1,<sp/>jp,<sp/>ibn);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pit<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip,<sp/>jp<sp/>+<sp/>1,<sp/>ibn);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pitr<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip<sp/>+<sp/>1,<sp/>jp<sp/>+<sp/>1,<sp/>ibn);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>qii<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>iq,<sp/>jq,<sp/>ibn);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>qir<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>iq<sp/>+<sp/>1,<sp/>jq,<sp/>ibn);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>qit<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>iq,<sp/>jq<sp/>+<sp/>1,<sp/>ibn);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>qitr<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>iq<sp/>+<sp/>1,<sp/>jq<sp/>+<sp/>1,<sp/>ibn);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>h[write];</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>h[pii];</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>q<sp/>=<sp/>T(0.25)<sp/>*<sp/>(h[qii]<sp/>+<sp/>h[qir]<sp/>+<sp/>h[qit]<sp/>+<sp/>h[qitr]);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ip<sp/>&gt;<sp/>ihalo<sp/>||<sp/>jp<sp/>&gt;<sp/>jhalo)</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s0<sp/>=<sp/>q;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>q;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s0<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>dhdx[write]<sp/>=<sp/>minmod2(theta,<sp/>s0,<sp/>s1,<sp/>s2)<sp/>/<sp/>delta;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//dhdx[write]<sp/>=<sp/>utils::nearest(utils::nearest(utils::nearest(dhdx[ii],<sp/>dhdx[ir]),<sp/>dhdx[it]),<sp/>dhdx[itr]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationGradHaloB(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>halowidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkmemwidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jhalo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ip,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iq,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jq,<sp/>T<sp/>theta,<sp/>T<sp/>delta,<sp/>T<sp/>eps,<sp/>T*<sp/>h,<sp/>T*<sp/>zs,<sp/>T*<sp/>zb,<sp/>T*<sp/>dhdx,<sp/>T*<sp/>dzsdx)</highlight></codeline>
<codeline lineno="712"><highlight class="normal">{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>pii,<sp/>pir,<sp/>pit,<sp/>pitr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>qii,<sp/>qir,<sp/>qit,<sp/>qitr;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>hp,<sp/>hq,zsp,zsq,<sp/>zbq;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>hs0,<sp/>hs1,<sp/>hs2,zss0,<sp/>zss1,<sp/>zss2;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>hwet,<sp/>zswet;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>write,<sp/>pii;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>iiwet,<sp/>irwet,<sp/>itwet,<sp/>itrwet;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>write<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ihalo,<sp/>jhalo,<sp/>ib);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>pii<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip,<sp/>jp,<sp/>ib);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pii<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip,<sp/>jp,<sp/>ibn);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pir<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip<sp/>+<sp/>1,<sp/>jp,<sp/>ibn);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pit<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip,<sp/>jp<sp/>+<sp/>1,<sp/>ibn);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pitr<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>ip<sp/>+<sp/>1,<sp/>jp<sp/>+<sp/>1,<sp/>ibn);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>qii<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>iq,<sp/>jq,<sp/>ibn);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>qir<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>iq<sp/>+<sp/>1,<sp/>jq,<sp/>ibn);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>qit<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>iq,<sp/>jq<sp/>+<sp/>1,<sp/>ibn);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>qitr<sp/>=<sp/>memloc(halowidth,<sp/>blkmemwidth,<sp/>iq<sp/>+<sp/>1,<sp/>jq<sp/>+<sp/>1,<sp/>ibn);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>zbq<sp/>=<sp/>T(0.25)<sp/>*<sp/>(zb[qii]<sp/>+<sp/>zb[qir]<sp/>+<sp/>zb[qit]<sp/>+<sp/>zb[qitr]);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>iiwet<sp/>=<sp/>h[qii]<sp/>&gt;<sp/>eps<sp/>?<sp/>h[qii]<sp/>:<sp/>T(0.0);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>irwet<sp/>=<sp/>h[qir]<sp/>&gt;<sp/>eps<sp/>?<sp/>h[qir]<sp/>:<sp/>T(0.0);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>itwet<sp/>=<sp/>h[qit]<sp/>&gt;<sp/>eps<sp/>?<sp/>h[qit]<sp/>:<sp/>T(0.0);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>itrwet<sp/>=<sp/>h[qitr]<sp/>&gt;<sp/>eps<sp/>?<sp/>h[qitr]<sp/>:<sp/>T(0.0);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>hwet<sp/>=<sp/>T(iiwet<sp/>+<sp/>irwet<sp/>+<sp/>itwet<sp/>+<sp/>itrwet);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>zswet<sp/>=<sp/>iiwet<sp/>*<sp/>(zb[qii]<sp/>+<sp/>h[qii])<sp/>+<sp/>irwet<sp/>*<sp/>(zb[qir]<sp/>+<sp/>h[qir])<sp/>+<sp/>itwet<sp/>*<sp/>(zb[qit]<sp/>+<sp/>h[qit])<sp/>+<sp/>itrwet<sp/>*<sp/>(zb[qitr]<sp/>+<sp/>h[qitr]);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hwet<sp/>&gt;<sp/>T(0.0))</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zswet<sp/>=<sp/>zswet<sp/>/<sp/>hwet;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hq<sp/>=<sp/>utils::max(T(0.0),<sp/>zswet<sp/>-<sp/>zbq);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hq<sp/>=<sp/>T(0.0);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>hs1<sp/>=<sp/>h[write];</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>zss1=<sp/>zs[write];</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>hp<sp/>=<sp/>h[pii];</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>zsp<sp/>=<sp/>zs[pii];</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>zsq<sp/>=<sp/>hq<sp/>+<sp/>zbq;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ip<sp/>&gt;<sp/>ihalo<sp/>||<sp/>jp<sp/>&gt;<sp/>jhalo<sp/>)</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hs0<sp/>=<sp/>hq;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hs2<sp/>=<sp/>hp;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zss0<sp/>=<sp/>zsq;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zss2<sp/>=<sp/>zsp;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hs2<sp/>=<sp/>hq;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hs0<sp/>=<sp/>hp;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zss2<sp/>=<sp/>zsq;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zss0<sp/>=<sp/>zsp;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>dhdx[write]<sp/>=<sp/>minmod2(theta,hs0,hs1,hs2)/<sp/>delta;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>dzsdx[write]<sp/>=<sp/>minmod2(theta,<sp/>zss0,<sp/>zss1,<sp/>zss2)<sp/>/<sp/>delta;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//dhdx[write]<sp/>=<sp/>utils::nearest(utils::nearest(utils::nearest(dhdx[ii],<sp/>dhdx[ir]),<sp/>dhdx[it]),<sp/>dhdx[itr]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationGHLeft(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibLB,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibLT,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/>T*<sp/>h,<sp/>T*<sp/>zs,<sp/>T*<sp/>zb,<sp/>T*<sp/>dhdx,<sp/>T*<sp/>dzsdx)</highlight></codeline>
<codeline lineno="787"><highlight class="normal">{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibn;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>delta<sp/>=<sp/>calcres(T(XParam.delta),<sp/>XBlock.level[ib]);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&lt;<sp/>XBlock.level[ibLB])</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>XParam.blkwidth<sp/>/<sp/>2;<sp/>j++)</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iq<sp/>=<sp/>XParam.blkwidth<sp/>-<sp/>4;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jq<sp/>=<sp/>j<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibLB;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevationGradHaloB(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>T(XParam.eps),<sp/>h,<sp/>zs,<sp/>zb,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHaloA(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>h,<sp/>dhdx);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHalo(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibLB,<sp/><sp/>-1,<sp/>j,<sp/>XParam.blkwidth<sp/>-<sp/>2,<sp/>j<sp/>*<sp/>2,<sp/>h,<sp/>dhdx,<sp/>dhdy);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&lt;<sp/>XBlock.level[ibLT])</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>(XParam.blkwidth<sp/>/<sp/>2);<sp/>j<sp/>&lt;<sp/>(XParam.blkwidth);<sp/>j++)</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iq<sp/>=<sp/>XParam.blkwidth<sp/>-<sp/>4;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jq<sp/>=<sp/>(j<sp/>-<sp/>(XParam.blkwidth<sp/>/<sp/>2))<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibLT;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevationGradHaloB(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>T(XParam.eps),<sp/>h,<sp/>zs,<sp/>zb,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHaloA(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>h,<sp/>dhdx);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHalo(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibLT,<sp/>-1,<sp/>j,<sp/>XParam.blkwidth<sp/>-<sp/>2,<sp/>(j<sp/>-<sp/>(XParam.blkwidth<sp/>/<sp/>2))<sp/>*<sp/>2,<sp/>h,<sp/>dhdx,<sp/>dhdy);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prolongation<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>il,<sp/>jl,<sp/>im,<sp/>jm;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&gt;<sp/>XBlock.level[ibLB])</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>XParam.blkwidth;<sp/>j++)</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibLB;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//il<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jl<sp/>=<sp/>j;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>XParam.blkwidth<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>XBlock.RightBot[ibLB]<sp/>==<sp/>ib<sp/>?<sp/>ftoi(floor(j<sp/>/<sp/>2))<sp/>:<sp/>ftoi(floor(j<sp/>/<sp/>2)<sp/>+<sp/>XParam.blkwidth<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//im<sp/>=<sp/>ip;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jm<sp/>=<sp/>ceil(j<sp/>*<sp/>T(0.5))<sp/>*<sp/>2<sp/>&gt;<sp/>j<sp/>?<sp/>jp<sp/>+<sp/>1<sp/>:<sp/>jp<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProlongationElevationGH(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>h,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal">}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationGHLeft(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/>T*<sp/>h,<sp/>T*zs,<sp/>T*zb,<sp/>T*<sp/>dhdx,<sp/>T*<sp/>dzsdx)</highlight></codeline>
<codeline lineno="859"><highlight class="normal">{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iy<sp/>=<sp/>threadIdx.y;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibl<sp/>=<sp/>blockIdx.x;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib<sp/>=<sp/>XBlock.active[ibl];</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>XBlock.level[ib];</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LB<sp/>=<sp/>XBlock.LeftBot[ib];</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LT<sp/>=<sp/>XBlock.LeftTop[ib];</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/>jhalo,<sp/>ibn;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>delta<sp/>=<sp/>calcres(XParam.delta,<sp/>lev);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>iy;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>iq<sp/>=<sp/>XParam.blkwidth<sp/>-<sp/>4;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>iy;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&lt;<sp/>XBlock.level[LB]<sp/>&amp;&amp;<sp/>iy<sp/>&lt;<sp/>(blockDim.y<sp/>/<sp/>2))</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>LB;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jq<sp/>=<sp/>iy<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevationGradHaloB(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>T(XParam.eps),<sp/>h,<sp/>zs,<sp/>zb,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHaloA(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>h,<sp/>dhdx);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHalo(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>i,<sp/>j,<sp/>h,<sp/>dhdx,<sp/>dhdy);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&lt;<sp/>XBlock.level[LT]<sp/>&amp;&amp;<sp/>iy<sp/>&gt;=<sp/>(blockDim.y<sp/>/<sp/>2))</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>LT;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jq<sp/>=<sp/>(iy<sp/>-<sp/>(blockDim.y<sp/>/<sp/>2))<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevationGradHaloB(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>T(XParam.eps),<sp/>h,<sp/>zs,<sp/>zb,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHalo(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>i,<sp/>j,<sp/>h,<sp/>dhdx,<sp/>dhdy);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHaloA(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>h,<sp/>dhdx);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prolongation<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>il,<sp/>jl,<sp/>im,<sp/>jm;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&gt;<sp/>XBlock.level[LB])</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>LB;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//il<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jl<sp/>=<sp/>iy;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>blockDim.y<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>XBlock.RightBot[LB]<sp/>==<sp/>ib<sp/>?<sp/>int(floor(iy<sp/>*T(0.5)))<sp/>:<sp/>int((floor(iy<sp/>*<sp/>T(0.5))<sp/>+<sp/>blockDim.y<sp/>/<sp/>2));</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//im<sp/>=<sp/>ip;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jm<sp/>=<sp/>ceil(iy<sp/>*<sp/>T(0.5))<sp/>*<sp/>2<sp/>&gt;<sp/>iy<sp/>?<sp/>jp<sp/>+<sp/>1<sp/>:<sp/>jp<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProlongationElevationGH(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>h,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="923"><highlight class="normal">}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationGHRight(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibRB,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibRT,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/>T*<sp/>h,<sp/>T*<sp/>zs,<sp/>T*<sp/>zb,<sp/>T*<sp/>dhdx,<sp/>T*<sp/>dzsdx)</highlight></codeline>
<codeline lineno="926"><highlight class="normal">{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibn;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>delta<sp/>=<sp/>calcres(T(XParam.delta),<sp/>XBlock.level[ib]);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>XParam.blkwidth;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>XParam.blkwidth-1;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&lt;<sp/>XBlock.level[ibRB])</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>XParam.blkwidth<sp/>/<sp/>2;<sp/>j++)</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iq<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jq<sp/>=<sp/>j<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibRB;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevationGradHaloB(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>T(XParam.eps),<sp/>h,<sp/>zs,<sp/>zb,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHaloA(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>h,<sp/>dhdx);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHalo(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibRB,<sp/>XParam.blkwidth,<sp/>j,<sp/>0,<sp/>j<sp/>*<sp/>2,<sp/>h,<sp/>dhdx,<sp/>dhdy);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&lt;<sp/>XBlock.level[ibRT])</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>(XParam.blkwidth<sp/>/<sp/>2);<sp/>j<sp/>&lt;<sp/>(XParam.blkwidth);<sp/>j++)</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iq<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jq<sp/>=<sp/>(j<sp/>-<sp/>(XParam.blkwidth<sp/>/<sp/>2))<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibRT;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevationGradHaloB(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>T(XParam.eps),<sp/>h,<sp/>zs,<sp/>zb,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHaloA(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>h,<sp/>dhdx);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHalo(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibRT,<sp/>XParam.blkwidth,<sp/>j,<sp/>0,<sp/>(j<sp/>-<sp/>(XParam.blkwidth<sp/>/<sp/>2))<sp/>*<sp/>2,<sp/>h,<sp/>dhdx,<sp/>dhdy);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prolongation<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>il,<sp/>jl,<sp/>im,<sp/>jm;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&gt;<sp/>XBlock.level[ibRB])</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>XParam.blkwidth;<sp/>j++)</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibRB;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//il<sp/>=<sp/>XParam.blkwidth-2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jl<sp/>=<sp/>j;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>XBlock.LeftBot[ibRB]<sp/>==<sp/>ib<sp/>?<sp/>ftoi(floor(j<sp/>/<sp/>2))<sp/>:<sp/>ftoi(floor(j<sp/>/<sp/>2)<sp/>+<sp/>XParam.blkwidth<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//im<sp/>=<sp/>ip;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jm<sp/>=<sp/>ceil(j<sp/>*<sp/>T(0.5))<sp/>*<sp/>2<sp/>&gt;<sp/>j<sp/>?<sp/>jp<sp/>+<sp/>1<sp/>:<sp/>jp<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProlongationElevationGH(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>h,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="988"><highlight class="normal">}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationGHRight(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/>T*<sp/>h,<sp/>T*zs,<sp/>T*zb,<sp/>T*<sp/>dhdx,<sp/>T*<sp/>dzsdx)</highlight></codeline>
<codeline lineno="991"><highlight class="normal">{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iy<sp/>=<sp/>threadIdx.y;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibl<sp/>=<sp/>blockIdx.x;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib<sp/>=<sp/>XBlock.active[ibl];</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>XBlock.level[ib];</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RB<sp/>=<sp/>XBlock.RightBot[ib];</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RT<sp/>=<sp/>XBlock.RightTop[ib];</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/>jhalo,<sp/>iq,<sp/>jq,<sp/>ip,<sp/>jp,<sp/>ibn;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>delta<sp/>=<sp/>calcres(XParam.delta,<sp/>lev);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>blockDim.y;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>iy;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/>iq<sp/>=<sp/>blockDim.y<sp/>-<sp/>4;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>blockDim.y-1;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>iy;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&lt;<sp/>XBlock.level[RB]<sp/>&amp;&amp;<sp/>iy<sp/>&lt;<sp/>(blockDim.y<sp/>/<sp/>2))</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>RB;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jq<sp/>=<sp/>iy<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevationGradHaloB(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>T(XParam.eps),<sp/>h,<sp/>zs,<sp/>zb,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHaloA(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>h,<sp/>dhdx);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHalo(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>i,<sp/>j,<sp/>h,<sp/>dhdx,<sp/>dhdy);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&lt;<sp/>XBlock.level[RT]<sp/>&amp;&amp;<sp/>iy<sp/>&gt;=<sp/>(blockDim.y<sp/>/<sp/>2))</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>RT;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jq<sp/>=<sp/>(iy<sp/>-<sp/>(XParam.blkwidth<sp/>/<sp/>2))<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevationGradHaloB(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>T(XParam.eps),<sp/>h,<sp/>zs,<sp/>zb,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHaloA(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>h,<sp/>dhdx);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHalo(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>i,<sp/>j,<sp/>h,<sp/>dhdx,<sp/>dhdy);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prolongation<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>il,<sp/>jl,<sp/>im,<sp/>jm;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&gt;<sp/>XBlock.level[RB])</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>iy;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>RB;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//il<sp/>=<sp/>blockDim.y<sp/>-<sp/>2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jl<sp/>=<sp/>iy;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>XBlock.LeftBot[RB]<sp/>==<sp/>ib<sp/>?<sp/>int(floor(iy<sp/>*<sp/>T(0.5)))<sp/>:<sp/>int((floor(iy<sp/>*T<sp/>(0.5))<sp/>+<sp/>blockDim.y<sp/>/<sp/>2));</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//im<sp/>=<sp/>ip;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jm<sp/>=<sp/>ceil(iy<sp/>*<sp/>T(0.5))<sp/>*<sp/>2<sp/>&gt;<sp/>iy<sp/>?<sp/>jp<sp/>+<sp/>1<sp/>:<sp/>jp<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProlongationElevationGH(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>h,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1058"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationGHTop(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibTL,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibTR,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/>T*<sp/>h,<sp/>T*zs,<sp/>T*zb,<sp/>T*<sp/>dhdx,<sp/>T*<sp/>dzsdx)</highlight></codeline>
<codeline lineno="1061"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibn;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>delta<sp/>=<sp/>calcres(T(XParam.delta),<sp/>XBlock.level[ib]);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>XParam.blkwidth;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>XParam.blkwidth<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&lt;<sp/>XBlock.level[ibTL])</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>XParam.blkwidth<sp/>/<sp/>2;<sp/>i++)</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jq<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iq<sp/>=<sp/>i<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibTL;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevationGradHaloB(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>T(XParam.eps),<sp/>h,<sp/>zs,<sp/>zb,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHalo(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibTL,<sp/>i,<sp/>XParam.blkwidth,<sp/>i<sp/>*<sp/>2,<sp/>0,<sp/>h,<sp/>dhdx,<sp/>dhdy);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&lt;<sp/>XBlock.level[ibTR])</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>(XParam.blkwidth<sp/>/<sp/>2);<sp/>i<sp/>&lt;<sp/>(XParam.blkwidth);<sp/>i++)</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jq<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iq<sp/>=<sp/>(i<sp/>-<sp/>(XParam.blkwidth<sp/>/<sp/>2))<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibTR;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevationGradHaloB(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>T(XParam.eps),<sp/>h,<sp/>zs,<sp/>zb,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHaloA(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>h,<sp/>dhdx);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHalo(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibTR,<sp/>i,<sp/>XParam.blkwidth,<sp/>(i<sp/>-<sp/>(XParam.blkwidth<sp/>/<sp/>2))<sp/>*<sp/>2,<sp/>0,<sp/>h,<sp/>dhdx,<sp/>dhdy);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prolongation<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>il,<sp/>jl,<sp/>im,<sp/>jm;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&gt;<sp/>XBlock.level[ibTL])</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>XParam.blkwidth;<sp/>i++)</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibTL;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jl<sp/>=<sp/>XParam.blkwidth<sp/>-<sp/>2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//il<sp/>=<sp/>i;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>XBlock.BotLeft[ibTL]<sp/>==<sp/>ib<sp/>?<sp/>ftoi(floor(i<sp/>/<sp/>2))<sp/>:<sp/>ftoi(floor(i<sp/>/<sp/>2)<sp/>+<sp/>XParam.blkwidth<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jm<sp/>=<sp/>jp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//im<sp/>=<sp/>ceil(i<sp/>*<sp/>T(0.5))<sp/>*<sp/>2<sp/>&gt;<sp/>i<sp/>?<sp/>ip<sp/>+<sp/>1<sp/>:<sp/>ip<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProlongationElevationGH(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>h,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationGHTop(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/>T*<sp/>h,<sp/>T*zs,<sp/>T*zb,<sp/>T*<sp/>dhdx,<sp/>T*<sp/>dzsdx)</highlight></codeline>
<codeline lineno="1125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iy<sp/>=<sp/>blockDim.x<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix<sp/>=<sp/>threadIdx.x;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibl<sp/>=<sp/>blockIdx.x;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib<sp/>=<sp/>XBlock.active[ibl];</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>XBlock.level[ib];</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TL<sp/>=<sp/>XBlock.TopLeft[ib];</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TR<sp/>=<sp/>XBlock.TopRight[ib];</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/>jhalo,<sp/>iq,<sp/>jq,<sp/>ip,<sp/>jp,<sp/>ibn;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>delta<sp/>=<sp/>calcres(XParam.delta,<sp/>lev);</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>ix;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>iy+1;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>iy;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>ix;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>jq<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&lt;<sp/>XBlock.level[TL]<sp/>&amp;&amp;<sp/>ix<sp/>&lt;<sp/>(blockDim.x<sp/>/<sp/>2))</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>TL;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iq<sp/>=<sp/>ix<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevationGradHaloB(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>T(XParam.eps),<sp/>h,<sp/>zs,<sp/>zb,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHaloA(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>h,<sp/>dhdx);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHalo(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>i,<sp/>j,<sp/>h,<sp/>dhdx,<sp/>dhdy);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&lt;<sp/>XBlock.level[TR]<sp/>&amp;&amp;<sp/>ix<sp/>&gt;=<sp/>(blockDim.x<sp/>/<sp/>2))</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>TR;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iq<sp/>=<sp/>(ix<sp/>-<sp/>(blockDim.x<sp/>/<sp/>2))<sp/>*<sp/>2;;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevationGradHaloB(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>T(XParam.eps),<sp/>h,<sp/>zs,<sp/>zb,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHaloA(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>h,<sp/>dhdx);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHalo(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>i,<sp/>j,<sp/>h,<sp/>dhdx,<sp/>dhdy);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prolongation<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>il,<sp/>jl,<sp/>im,<sp/>jm;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&gt;<sp/>XBlock.level[TL])</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ihalo<sp/>=<sp/>i;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>TL;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jl<sp/>=<sp/>blockDim.x<sp/>-<sp/>2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//il<sp/>=<sp/>ix;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>XBlock.BotLeft[TL]<sp/>==<sp/>ib<sp/>?<sp/>int(floor(ix<sp/>*T(0.0)))<sp/>:<sp/>int((floor(ix<sp/>*<sp/>T(0.0))<sp/>+<sp/>blockDim.x<sp/>/<sp/>2));</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jm<sp/>=<sp/>jp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//im<sp/>=<sp/>ceil(ix<sp/>*<sp/>T(0.5))<sp/>*<sp/>2<sp/>&gt;<sp/>ix<sp/>?<sp/>ip<sp/>+<sp/>1<sp/>:<sp/>ip<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProlongationElevationGH(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>h,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationGHBot(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibBL,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibBR,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/>T*<sp/>h,<sp/>T*<sp/>zs,<sp/>T*<sp/>zb,<sp/>T*<sp/>dhdx,<sp/>T*<sp/>dzsdx)</highlight></codeline>
<codeline lineno="1192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibn;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>delta<sp/>=<sp/>calcres(T(XParam.delta),<sp/>XBlock.level[ib]);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&lt;<sp/>XBlock.level[ibBL])</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>XParam.blkwidth<sp/>/<sp/>2;<sp/>i++)</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iq<sp/>=<sp/>i<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jq<sp/>=<sp/>XParam.blkwidth<sp/>-<sp/>4;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibBL;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevationGradHaloB(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>T(XParam.eps),<sp/>h,<sp/>zs,<sp/>zb,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHaloA(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>h,<sp/>dhdx);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHalo(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibBL,<sp/>i,<sp/>-1,<sp/>i<sp/>*<sp/>2,<sp/>XParam.blkwidth<sp/>-<sp/>2,<sp/>h,<sp/>dhdx,<sp/>dhdy);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&lt;<sp/>XBlock.level[ibBR])</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>(XParam.blkwidth<sp/>/<sp/>2);<sp/>i<sp/>&lt;<sp/>(XParam.blkwidth);<sp/>i++)</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iq<sp/>=<sp/>(i<sp/>-<sp/>(XParam.blkwidth<sp/>/<sp/>2))<sp/>*<sp/>2;;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jq<sp/>=<sp/>XParam.blkwidth<sp/>-<sp/>4;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibBR;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevationGradHaloB(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>T(XParam.eps),<sp/>h,<sp/>zs,<sp/>zb,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHaloA(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>h,<sp/>dhdx);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHalo(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibBR,<sp/>i,<sp/>-1,<sp/>(i<sp/>-<sp/>(XParam.blkwidth<sp/>/<sp/>2))<sp/>*<sp/>2,<sp/>XParam.blkwidth<sp/>-<sp/>2,<sp/>h,<sp/>dhdx,<sp/>dhdy);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prolongation<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>il,<sp/>jl,<sp/>im,<sp/>jm;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&gt;<sp/>XBlock.level[ibBL])</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>XParam.blkwidth;<sp/>i++)</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibBL;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jl<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//il<sp/>=<sp/>i;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>XParam.blkwidth<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>XBlock.TopLeft[ibBL]<sp/>==<sp/>ib<sp/>?<sp/>ftoi(floor(i<sp/>/<sp/>2))<sp/>:<sp/>ftoi(floor(i<sp/>/<sp/>2)<sp/>+<sp/>XParam.blkwidth<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jm<sp/>=<sp/>jp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//im<sp/>=<sp/>ceil(i<sp/>*<sp/>T(0.5))<sp/>*<sp/>2<sp/>&gt;<sp/>i<sp/>?<sp/>ip<sp/>+<sp/>1<sp/>:<sp/>ip<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProlongationElevationGH(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>h,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationGHBot(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/>T*<sp/>h,<sp/>T*<sp/>zs,<sp/>T*<sp/>zb,<sp/>T*<sp/>dhdx,<sp/>T*<sp/>dzsdx)</highlight></codeline>
<codeline lineno="1257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix<sp/>=<sp/>threadIdx.x;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibl<sp/>=<sp/>blockIdx.x;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib<sp/>=<sp/>XBlock.active[ibl];</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>XBlock.level[ib];</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BL<sp/>=<sp/>XBlock.BotLeft[ib];</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BR<sp/>=<sp/>XBlock.BotRight[ib];</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/>jhalo,<sp/>ibn;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>delta<sp/>=<sp/>calcres(XParam.delta,<sp/>lev);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>ix;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/>jq<sp/>=<sp/>XParam.blkwidth<sp/>-<sp/>4;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>ix;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&lt;<sp/>XBlock.level[BL]<sp/>&amp;&amp;<sp/>ix<sp/>&lt;<sp/>(blockDim.x<sp/>/<sp/>2))</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>BL;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iq<sp/>=<sp/>ix<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevationGradHaloB(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>T(XParam.eps),<sp/>h,<sp/>zs,<sp/>zb,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHaloA(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>h,<sp/>dhdx);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHalo(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>i,<sp/>j,<sp/>h,<sp/>dhdx,<sp/>dhdy);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&lt;<sp/>XBlock.level[BR]<sp/>&amp;&amp;<sp/>ix<sp/>&gt;=<sp/>(blockDim.x<sp/>/<sp/>2))</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>BR;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iq<sp/>=<sp/>(ix<sp/>-<sp/>(blockDim.x<sp/>/<sp/>2))<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevationGradHaloB(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>T(XParam.eps),<sp/>h,<sp/>zs,<sp/>zb,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHaloA(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>iq,<sp/>jq,<sp/>T(XParam.theta),<sp/>delta,<sp/>h,<sp/>dhdx);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//conserveElevationGradHalo(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>i,<sp/>j,<sp/>h,<sp/>dhdx,<sp/>dhdy);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prolongation<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>il,<sp/>jl,<sp/>im,<sp/>jm;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&gt;<sp/>XBlock.level[BL])</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>ix;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>BL;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jl<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//il<sp/>=<sp/>ix;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>blockDim.x<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>XBlock.TopLeft[BL]<sp/>==<sp/>ib<sp/>?<sp/>int(floor(ix<sp/>*<sp/>T(0.0)))<sp/>:<sp/>int((floor(ix<sp/>*<sp/>T(0.0))<sp/>+<sp/>blockDim.x<sp/>/<sp/>2));</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jm<sp/>=<sp/>jp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//im<sp/>=<sp/>ceil(ix<sp/>*<sp/>T(0.5))<sp/>*<sp/>2<sp/>&gt;<sp/>ix<sp/>?<sp/>ip<sp/>+<sp/>1<sp/>:<sp/>ip<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProlongationElevationGH(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>h,<sp/>dhdx,<sp/>dzsdx);</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationLeft(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibLB,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibLT,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>XEv,<sp/>T*<sp/>zb)</highlight></codeline>
<codeline lineno="1324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,jhalo,ibn,ip,<sp/>jp;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restriction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>XParam.blkwidth<sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>ii<sp/>=<sp/>memloc(XParam,<sp/>-1,<sp/>5,<sp/>46);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&lt;<sp/>XBlock.level[ibLB])</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>XParam.blkwidth<sp/>/<sp/>2;<sp/>j++)</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>j<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibLB;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevation(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&lt;<sp/>XBlock.level[ibLT])</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>(XParam.blkwidth<sp/>/<sp/>2);<sp/>j<sp/>&lt;<sp/>(XParam.blkwidth);<sp/>j++)</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>(j<sp/>-<sp/>(XParam.blkwidth<sp/>/<sp/>2))<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibLT;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevation(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prolongation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&gt;<sp/>XBlock.level[ibLB])</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>XParam.blkwidth;<sp/>j++)</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibLB;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//il<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jl<sp/>=<sp/>j;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>XParam.blkwidth<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>XBlock.RightBot[ibLB]<sp/>==<sp/>ib<sp/>?<sp/>ftoi(floor(j<sp/>*<sp/>T(0.5)))<sp/>:<sp/>ftoi(floor(j<sp/>*<sp/>T(0.5))<sp/>+<sp/>XParam.blkwidth<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//im<sp/>=<sp/>ip;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jm<sp/>=<sp/>ceil(j<sp/>*<sp/>T(0.5))<sp/>*<sp/>2<sp/>&gt;<sp/>j<sp/>?<sp/>jp<sp/>+<sp/>1<sp/>:<sp/>jp<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProlongationElevation(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationLeft(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>XEv,<sp/>T*<sp/>zb)</highlight></codeline>
<codeline lineno="1386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkmemwidth<sp/>=<sp/>blockDim.y<sp/>+<sp/>XParam.halowidth<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iy<sp/>=<sp/>threadIdx.y;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibl<sp/>=<sp/>blockIdx.x;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib<sp/>=<sp/>XBlock.active[ibl];</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>XBlock.level[ib];</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LB<sp/>=<sp/>XBlock.LeftBot[ib];</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LT<sp/>=<sp/>XBlock.LeftTop[ib];</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo<sp/>,<sp/>jhalo,<sp/>i,<sp/>j,<sp/>ibn;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>iy;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>XParam.blkwidth<sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&lt;<sp/>XBlock.level[LB]<sp/>&amp;&amp;<sp/>iy<sp/>&lt;<sp/>(blockDim.y<sp/>/<sp/>2))</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>LB;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>iy<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevation(XParam.halowidth,<sp/>blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>i,<sp/>j,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&lt;<sp/>XBlock.level[LT]<sp/>&amp;&amp;<sp/>iy<sp/>&gt;=<sp/>(blockDim.y<sp/>/<sp/>2))</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>LT;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>(iy<sp/>-<sp/>(blockDim.y<sp/>/<sp/>2))<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevation(XParam.halowidth,<sp/>blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>i,<sp/>j,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prolongation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ip,<sp/>jp;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&gt;<sp/>XBlock.level[LB])</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>iy;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>LB;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//il<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jl<sp/>=<sp/>iy;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>XParam.blkwidth<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>XBlock.RightBot[ibn]<sp/>==<sp/>ib<sp/>?<sp/>floor(iy<sp/>*<sp/>T(0.5))<sp/>:<sp/>(floor(iy<sp/>*<sp/>T(0.5))<sp/>+<sp/>blockDim.y<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//im<sp/>=<sp/>ip;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jm<sp/>=<sp/>ceil(iy<sp/>*<sp/>T(0.5))<sp/>*<sp/>2<sp/>&gt;<sp/>iy<sp/>?<sp/>jp<sp/>+<sp/>1<sp/>:<sp/>jp<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProlongationElevation(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WetDryProlongationGPULeft(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>XEv,<sp/>T*<sp/>zb)</highlight></codeline>
<codeline lineno="1449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkmemwidth<sp/>=<sp/>blockDim.y<sp/>+<sp/>XParam.halowidth<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iy<sp/>=<sp/>threadIdx.y;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibl<sp/>=<sp/>blockIdx.x;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib<sp/>=<sp/>XBlock.active[ibl];</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>XBlock.level[ib];</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LB<sp/>=<sp/>XBlock.LeftBot[ib];</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LT<sp/>=<sp/>XBlock.LeftTop[ib];</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ip,<sp/>jp,<sp/>ihalo,<sp/>jhalo,<sp/>ibn;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>iy;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&gt;<sp/>XBlock.level[LB])</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>LB;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//il<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jl<sp/>=<sp/>iy;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>XParam.blkwidth<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>XBlock.RightBot[ibn]<sp/>==<sp/>ib<sp/>?<sp/>floor(iy<sp/>*<sp/>T(0.5))<sp/>:<sp/>(floor(iy<sp/>*<sp/>T(0.5))<sp/>+<sp/>blockDim.y<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//im<sp/>=<sp/>ip;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jm<sp/>=<sp/>ceil(iy<sp/>*<sp/>T(0.5))<sp/>*<sp/>2<sp/>&gt;<sp/>iy<sp/>?<sp/>jp<sp/>+<sp/>1<sp/>:<sp/>jp<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProlongationElevation(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WetDryRestrictionGPULeft(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>XEv,<sp/>T*<sp/>zb)</highlight></codeline>
<codeline lineno="1491"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkmemwidth<sp/>=<sp/>blockDim.y<sp/>+<sp/>XParam.halowidth<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iy<sp/>=<sp/>threadIdx.y;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibl<sp/>=<sp/>blockIdx.x;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib<sp/>=<sp/>XBlock.active[ibl];</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>XBlock.level[ib];</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LB<sp/>=<sp/>XBlock.LeftBot[ib];</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LT<sp/>=<sp/>XBlock.LeftTop[ib];</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/>jhalo,<sp/>ibn,<sp/>ir,<sp/>jr;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>iy;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/>ir<sp/>=<sp/>XParam.blkwidth<sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&lt;<sp/>XBlock.level[LB]<sp/>&amp;&amp;<sp/>iy<sp/>&lt;<sp/>(blockDim.y<sp/>/<sp/>2))</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>LB;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jr<sp/>=<sp/>iy<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wetdryrestriction(XParam.halowidth,<sp/>blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ir,<sp/>jr,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&lt;<sp/>XBlock.level[LT]<sp/>&amp;&amp;<sp/>iy<sp/>&gt;=<sp/>(blockDim.y<sp/>/<sp/>2))</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>LT;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jr<sp/>=<sp/>(iy<sp/>-<sp/>(blockDim.y<sp/>/<sp/>2))<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wetdryrestriction(XParam.halowidth,<sp/>blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ir,<sp/>jr,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationRight(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibRB,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibRT,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>XEv,<sp/>T*<sp/>zb)</highlight></codeline>
<codeline lineno="1530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/>jhalo,<sp/>ibn,<sp/>ip,<sp/>jp;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&lt;<sp/>XBlock.level[ibRB])</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>XParam.blkwidth<sp/>/<sp/>2;<sp/>j++)</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevation(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibRB,<sp/>XParam.blkwidth,<sp/>j,<sp/>0,<sp/>j*2,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&lt;<sp/>XBlock.level[ibRT])</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>(XParam.blkwidth<sp/>/<sp/>2);<sp/>j<sp/>&lt;<sp/>(XParam.blkwidth);<sp/>j++)</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevation(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibRT,<sp/>XParam.blkwidth,<sp/>j,<sp/>0,<sp/>(j<sp/>-<sp/>(XParam.blkwidth<sp/>/<sp/>2))<sp/>*<sp/>2,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prolongation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>XParam.blkwidth;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&gt;<sp/>XBlock.level[ibRB])</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>XParam.blkwidth;<sp/>j++)</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibRB;</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//il<sp/>=<sp/>XParam.blkwidth-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jl<sp/>=<sp/>j;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>XBlock.LeftBot[ibn]<sp/>==<sp/>ib<sp/>?<sp/>ftoi(floor(j<sp/>*<sp/>T(0.5)))<sp/>:<sp/>ftoi(floor(j<sp/>*<sp/>T(0.5))<sp/>+<sp/>XParam.blkwidth<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//im<sp/>=<sp/>ip;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jm<sp/>=<sp/>ceil(j<sp/>*<sp/>T(0.5))<sp/>*<sp/>2<sp/>&gt;<sp/>j<sp/>?<sp/>jp<sp/>+<sp/>1<sp/>:<sp/>jp<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProlongationElevation(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/><sp/>ip,<sp/>jp,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationRight(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>XEv,<sp/>T*<sp/>zb)</highlight></codeline>
<codeline lineno="1578"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkmemwidth<sp/>=<sp/>blockDim.y<sp/>+<sp/>XParam.halowidth<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iy<sp/>=<sp/>threadIdx.y;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibl<sp/>=<sp/>blockIdx.x;</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib<sp/>=<sp/>XBlock.active[ibl];</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>XBlock.level[ib];</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RB<sp/>=<sp/>XBlock.RightBot[ib];</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RT<sp/>=<sp/>XBlock.RightTop[ib];</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/>jhalo,<sp/>i,<sp/>j,<sp/>ibn;</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>blockDim.y;</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>iy;</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&lt;<sp/>XBlock.level[RB]<sp/>&amp;&amp;<sp/>iy<sp/>&lt;<sp/>(blockDim.y<sp/>/<sp/>2))</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>RB;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>iy<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevation(XParam.halowidth,<sp/>blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>i,<sp/>j,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&lt;<sp/>XBlock.level[RT]<sp/>&amp;&amp;<sp/>iy<sp/>&gt;=<sp/>(blockDim.y<sp/>/<sp/>2))</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>RT;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>(iy<sp/>-<sp/>(blockDim.y<sp/>/<sp/>2))<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevation(XParam.halowidth,<sp/>blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>i,<sp/>j,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prolongation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ip,<sp/>jp;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ihalo<sp/>=<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&gt;<sp/>XBlock.level[RB])</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>iy;</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>RB;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//il<sp/>=<sp/>blockDim.y<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jl<sp/>=<sp/>iy;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>XBlock.LeftBot[ibn]<sp/>==<sp/>ib<sp/>?<sp/>floor(iy<sp/>*<sp/>T(0.5))<sp/>:<sp/>(floor(iy<sp/>*<sp/>T(0.5))<sp/>+<sp/>blockDim.y<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//im<sp/>=<sp/>ip;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jm<sp/>=<sp/>ceil(iy<sp/>*<sp/>T(0.5))<sp/>*<sp/>2<sp/>&gt;<sp/>iy<sp/>?<sp/>jp<sp/>+<sp/>1<sp/>:<sp/>jp<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProlongationElevation(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1640"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WetDryProlongationGPURight(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>XEv,<sp/>T*<sp/>zb)</highlight></codeline>
<codeline lineno="1643"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkmemwidth<sp/>=<sp/>blockDim.y<sp/>+<sp/>XParam.halowidth<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iy<sp/>=<sp/>threadIdx.y;</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibl<sp/>=<sp/>blockIdx.x;</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib<sp/>=<sp/>XBlock.active[ibl];</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>XBlock.level[ib];</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RB<sp/>=<sp/>XBlock.RightBot[ib];</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RT<sp/>=<sp/>XBlock.RightTop[ib];</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ip,<sp/>jp,<sp/>ihalo,<sp/>jhalo,<sp/>ibn;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>blockDim.y;</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>iy;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&gt;<sp/>XBlock.level[RB])</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>RB;</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//il<sp/>=<sp/>blockDim.y<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jl<sp/>=<sp/>iy;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>XBlock.LeftBot[ibn]<sp/>==<sp/>ib<sp/>?<sp/>floor(iy<sp/>*<sp/>T(0.5))<sp/>:<sp/>(floor(iy<sp/>*<sp/>T(0.5))<sp/>+<sp/>blockDim.y<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//im<sp/>=<sp/>ip;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jm<sp/>=<sp/>ceil(iy<sp/>*<sp/>T(0.5))<sp/>*<sp/>2<sp/>&gt;<sp/>iy<sp/>?<sp/>jp<sp/>+<sp/>1<sp/>:<sp/>jp<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProlongationElevation(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WetDryRestrictionGPURight(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>XEv,<sp/>T*<sp/>zb)</highlight></codeline>
<codeline lineno="1685"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkmemwidth<sp/>=<sp/>blockDim.y<sp/>+<sp/>XParam.halowidth<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iy<sp/>=<sp/>threadIdx.y;</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibl<sp/>=<sp/>blockIdx.x;</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib<sp/>=<sp/>XBlock.active[ibl];</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>XBlock.level[ib];</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RB<sp/>=<sp/>XBlock.RightBot[ib];</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RT<sp/>=<sp/>XBlock.RightTop[ib];</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/>jhalo,<sp/>ibn,<sp/>ir,<sp/>jr;</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>blockDim.y;</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>iy;</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/>ir<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&lt;<sp/>XBlock.level[RB]<sp/>&amp;&amp;<sp/>iy<sp/>&lt;<sp/>(blockDim.y<sp/>/<sp/>2))</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>RB;</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jr<sp/>=<sp/>iy<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wetdryrestriction(XParam.halowidth,<sp/>blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ir,<sp/>jr,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&lt;<sp/>XBlock.level[RT]<sp/>&amp;&amp;<sp/>iy<sp/>&gt;=<sp/>(blockDim.y<sp/>/<sp/>2))</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>RT;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jr<sp/>=<sp/>(iy<sp/>-<sp/>(blockDim.y<sp/>/<sp/>2))<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wetdryrestriction(XParam.halowidth,<sp/>blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ir,<sp/>jr,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationTop(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibTL,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibTR,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>XEv,<sp/>T*<sp/>zb)</highlight></codeline>
<codeline lineno="1724"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/>jhalo,<sp/>ibn,<sp/>ip,<sp/>jp;</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&lt;<sp/>XBlock.level[ibTL])</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>XParam.blkwidth<sp/>/<sp/>2;<sp/>i++)</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevation(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibTL,<sp/>i,<sp/>XParam.blkwidth,<sp/>i*2,<sp/>0,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&lt;<sp/>XBlock.level[ibTR])</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>(XParam.blkwidth<sp/>/<sp/>2);<sp/>i<sp/>&lt;<sp/>(XParam.blkwidth);<sp/>i++)</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevation(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibTR,<sp/>i,<sp/>XParam.blkwidth,<sp/>(i<sp/>-<sp/>(XParam.blkwidth<sp/>/<sp/>2))<sp/>*<sp/>2,<sp/>0,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prolongation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>XParam.blkwidth;</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&gt;<sp/>XBlock.level[ibTL])</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>XParam.blkwidth;<sp/>i++)</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibTL;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//il<sp/>=<sp/>i;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jl<sp/>=<sp/>XParam.blkwidth<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>XBlock.BotLeft[ibn]<sp/>==<sp/>ib<sp/>?<sp/>ftoi(floor(i<sp/>*<sp/>T(0.5)))<sp/>:<sp/>ftoi(floor(i<sp/>*<sp/>T(0.5))<sp/>+<sp/>XParam.blkwidth<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"></highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jm<sp/>=<sp/>jp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//im<sp/>=<sp/>ceil(i<sp/>*<sp/>T(0.5))<sp/>*<sp/>2<sp/>&gt;<sp/>i<sp/>?<sp/>ip<sp/>+<sp/>1<sp/>:<sp/>ip<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProlongationElevation(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationTop(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>XEv,<sp/>T*<sp/>zb)</highlight></codeline>
<codeline lineno="1775"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkmemwidth<sp/>=<sp/>blockDim.x<sp/>+<sp/>XParam.halowidth<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix<sp/>=<sp/>threadIdx.x;</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibl<sp/>=<sp/>blockIdx.x;</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib<sp/>=<sp/>XBlock.active[ibl];</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>XBlock.level[ib];</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TL<sp/>=<sp/>XBlock.TopLeft[ib];</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TR<sp/>=<sp/>XBlock.TopRight[ib];</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/>jhalo,<sp/>i,<sp/>j,<sp/>ibn;</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>ix;</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>blockDim.x;</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&lt;<sp/>XBlock.level[TL]<sp/>&amp;&amp;<sp/>ix<sp/>&lt;<sp/>(blockDim.x<sp/>/<sp/>2))</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>TL;</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>ix<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevation(XParam.halowidth,<sp/>blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>i,<sp/>j,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&lt;<sp/>XBlock.level[TR]<sp/>&amp;&amp;<sp/>ix<sp/>&gt;=<sp/>(blockDim.x<sp/>/<sp/>2))</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>TR;</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>(ix<sp/>-<sp/>(blockDim.x<sp/>/<sp/>2))<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevation(XParam.halowidth,<sp/>blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>i,<sp/>j,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prolongation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ip,<sp/>jp;</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&gt;<sp/>XBlock.level[TL])</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>ix;</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>TL;</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//il<sp/>=<sp/>ix;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jl<sp/>=<sp/>blockDim.x<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>XBlock.BotLeft[ibn]<sp/>==<sp/>ib<sp/>?<sp/>floor(ix<sp/>*<sp/>T(0.5))<sp/>:<sp/>(floor(ix<sp/>*<sp/>T(0.5))<sp/>+<sp/>blockDim.x<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jm<sp/>=<sp/>jp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//im<sp/>=<sp/>ceil(ix<sp/>*<sp/>T(0.5))<sp/>*<sp/>2<sp/>&gt;<sp/>ix<sp/>?<sp/>ip<sp/>+<sp/>1<sp/>:<sp/>ip<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProlongationElevation(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1835"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WetDryProlongationGPUTop(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>XEv,<sp/>T*<sp/>zb)</highlight></codeline>
<codeline lineno="1838"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkmemwidth<sp/>=<sp/>blockDim.x<sp/>+<sp/>XParam.halowidth<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix<sp/>=<sp/>threadIdx.x;</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibl<sp/>=<sp/>blockIdx.x;</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib<sp/>=<sp/>XBlock.active[ibl];</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>XBlock.level[ib];</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TL<sp/>=<sp/>XBlock.TopLeft[ib];</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TR<sp/>=<sp/>XBlock.TopRight[ib];</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prolongation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ip,<sp/>jp,ihalo,jhalo,ibn;</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>blockDim.x;</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>ix;</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&gt;<sp/>XBlock.level[TL])</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>TL;</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//il<sp/>=<sp/>ix;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jl<sp/>=<sp/>blockDim.x<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1865"><highlight class="normal"></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>XBlock.BotLeft[ibn]<sp/>==<sp/>ib<sp/>?<sp/>floor(ix<sp/>*<sp/>T(0.5))<sp/>:<sp/>(floor(ix<sp/>*<sp/>T(0.5))<sp/>+<sp/>blockDim.x<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jm<sp/>=<sp/>jp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//im<sp/>=<sp/>ceil(ix<sp/>*<sp/>T(0.5))<sp/>*<sp/>2<sp/>&gt;<sp/>ix<sp/>?<sp/>ip<sp/>+<sp/>1<sp/>:<sp/>ip<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProlongationElevation(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1876"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WetDryRestrictionGPUTop(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>XEv,<sp/>T*<sp/>zb)</highlight></codeline>
<codeline lineno="1879"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkmemwidth<sp/>=<sp/>blockDim.x<sp/>+<sp/>XParam.halowidth<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix<sp/>=<sp/>threadIdx.x;</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibl<sp/>=<sp/>blockIdx.x;</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib<sp/>=<sp/>XBlock.active[ibl];</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>XBlock.level[ib];</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TL<sp/>=<sp/>XBlock.TopLeft[ib];</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TR<sp/>=<sp/>XBlock.TopRight[ib];</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prolongation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/>jhalo,<sp/>ibn,<sp/>ir,<sp/>jr;</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>blockDim.x;</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>ix;</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/>jr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&lt;<sp/>XBlock.level[TL]<sp/>&amp;&amp;<sp/>ix<sp/>&lt;<sp/>(blockDim.x<sp/>/<sp/>2))</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>TL;</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ir<sp/>=<sp/>ix<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wetdryrestriction(XParam.halowidth,<sp/>blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ir,<sp/>jr,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&lt;<sp/>XBlock.level[TR]<sp/>&amp;&amp;<sp/>ix<sp/>&gt;=<sp/>(blockDim.x<sp/>/<sp/>2))</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>TR;</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ir<sp/>=<sp/>(ix<sp/>-<sp/>(blockDim.x<sp/>/<sp/>2))<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wetdryrestriction(XParam.halowidth,<sp/>blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ir,<sp/>jr,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationBot(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibBL,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibBR,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>XEv,<sp/>T*<sp/>zb)</highlight></codeline>
<codeline lineno="1919"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/>jhalo,<sp/>ibn,<sp/>ip,<sp/>jp;</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1923"><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&lt;<sp/>XBlock.level[ibBL])</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>XParam.blkwidth<sp/>/<sp/>2;<sp/>i++)</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevation(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibBL,<sp/>i,-1,<sp/>i<sp/>*<sp/>2,<sp/>XParam.blkwidth-2,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&lt;<sp/>XBlock.level[ibBR])</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>(XParam.blkwidth<sp/>/<sp/>2);<sp/>i<sp/>&lt;<sp/>(XParam.blkwidth);<sp/>i++)</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevation(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibBR,<sp/>i,<sp/>-1,<sp/>(i<sp/>-<sp/>(XParam.blkwidth<sp/>/<sp/>2))<sp/>*<sp/>2,<sp/>XParam.blkwidth-2,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prolongation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(XBlock.level[ib]<sp/>&gt;<sp/>XBlock.level[ibBL])</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>XParam.blkwidth;<sp/>i++)</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>ibBL;</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//il<sp/>=<sp/>i;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jl<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>XParam.blkwidth<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>XBlock.TopLeft[ibn]<sp/>==<sp/>ib<sp/>?<sp/>ftoi(floor(i<sp/>*<sp/>T(0.5)))<sp/>:<sp/>ftoi(floor(i<sp/>*<sp/>T(0.5))<sp/>+<sp/>XParam.blkwidth<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"></highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jm<sp/>=<sp/>jp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//im<sp/>=<sp/>ceil(i<sp/>*<sp/>T(0.5))<sp/>*<sp/>2<sp/>&gt;<sp/>i<sp/>?<sp/>ip<sp/>+<sp/>1<sp/>:<sp/>ip<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"></highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProlongationElevation(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"></highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conserveElevationBot(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>XEv,<sp/>T*<sp/>zb)</highlight></codeline>
<codeline lineno="1972"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkmemwidth<sp/>=<sp/>blockDim.x<sp/>+<sp/>XParam.halowidth<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix<sp/>=<sp/>threadIdx.x;</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibl<sp/>=<sp/>blockIdx.x;</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib<sp/>=<sp/>XBlock.active[ibl];</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"></highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>XBlock.level[ib];</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BL<sp/>=<sp/>XBlock.BotLeft[ib];</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BR<sp/>=<sp/>XBlock.BotRight[ib];</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"></highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/>jhalo,<sp/>ibn;</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"></highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>ix;</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>blockDim.x-2;</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&lt;<sp/>XBlock.level[BL]<sp/>&amp;&amp;<sp/>ix<sp/>&lt;<sp/>(blockDim.x<sp/>/<sp/>2))</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>BL;</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>ix<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"></highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevation(XParam.halowidth,<sp/>blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>i,<sp/>j,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&lt;<sp/>XBlock.level[BR]<sp/>&amp;&amp;<sp/>ix<sp/>&gt;=<sp/>(blockDim.x<sp/>/<sp/>2))</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>BR;</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>(ix<sp/>-<sp/>(blockDim.x<sp/>/<sp/>2))<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"></highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conserveElevation(XParam.halowidth,<sp/>blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>i,<sp/>j,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"></highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prolongation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ip,<sp/>jp;</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>ip,<sp/>jp,<sp/>il,<sp/>jl,<sp/>im,<sp/>jm;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jhalo<sp/>=<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&gt;<sp/>XBlock.level[BL])</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>ix;</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>BL;</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"></highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//il<sp/>=<sp/>ix;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jl<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>blockDim.x<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>XBlock.TopLeft[ibn]<sp/>==<sp/>ib<sp/>?<sp/>floor(ix<sp/>*T(0.5))<sp/>:<sp/>(floor(ix*T(0.5))<sp/>+<sp/>blockDim.x<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jm<sp/>=<sp/>jp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//im<sp/>=<sp/>ceil(ix<sp/>*<sp/>T(0.5))<sp/>*<sp/>2<sp/>&gt;<sp/>ix<sp/>?<sp/>ip<sp/>+<sp/>1<sp/>:<sp/>ip<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"></highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProlongationElevation(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/><sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal"></highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"></highlight></codeline>
<codeline lineno="2036"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"></highlight></codeline>
<codeline lineno="2038"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WetDryProlongationGPUBot(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>XEv,<sp/>T*<sp/>zb)</highlight></codeline>
<codeline lineno="2039"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkmemwidth<sp/>=<sp/>blockDim.x<sp/>+<sp/>XParam.halowidth<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"></highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix<sp/>=<sp/>threadIdx.x;</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibl<sp/>=<sp/>blockIdx.x;</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib<sp/>=<sp/>XBlock.active[ibl];</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>XBlock.level[ib];</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BL<sp/>=<sp/>XBlock.BotLeft[ib];</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BR<sp/>=<sp/>XBlock.BotRight[ib];</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"></highlight></codeline>
<codeline lineno="2051"><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"></highlight></codeline>
<codeline lineno="2053"><highlight class="normal"></highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/>jhalo,<sp/>ibn;</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prolongation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ip,<sp/>jp;</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>ip,<sp/>jp,<sp/>il,<sp/>jl,<sp/>im,<sp/>jm;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jhalo<sp/>=<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>ix;</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"></highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&gt;<sp/>XBlock.level[BL])</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>BL;</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//il<sp/>=<sp/>ix;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jl<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"></highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jp<sp/>=<sp/>blockDim.x<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>XBlock.TopLeft[ibn]<sp/>==<sp/>ib<sp/>?<sp/>floor(ix<sp/>*<sp/>T(0.5))<sp/>:<sp/>(floor(ix<sp/>*<sp/>T(0.5))<sp/>+<sp/>blockDim.x<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jm<sp/>=<sp/>jp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//im<sp/>=<sp/>ceil(ix<sp/>*<sp/>T(0.5))<sp/>*<sp/>2<sp/>&gt;<sp/>ix<sp/>?<sp/>ip<sp/>+<sp/>1<sp/>:<sp/>ip<sp/>-<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProlongationElevation(XParam.halowidth,<sp/>XParam.blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ip,<sp/>jp,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"></highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2084"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"></highlight></codeline>
<codeline lineno="2086"><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WetDryRestrictionGPUBot(<ref refid="classParam" kindref="compound">Param</ref><sp/>XParam,<sp/><ref refid="structBlockP" kindref="compound">BlockP&lt;T&gt;</ref><sp/>XBlock,<sp/><ref refid="structEvolvingP" kindref="compound">EvolvingP&lt;T&gt;</ref><sp/>XEv,<sp/>T*<sp/>zb)</highlight></codeline>
<codeline lineno="2088"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkmemwidth<sp/>=<sp/>blockDim.x<sp/>+<sp/>XParam.halowidth<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"></highlight></codeline>
<codeline lineno="2091"><highlight class="normal"></highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix<sp/>=<sp/>threadIdx.x;</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibl<sp/>=<sp/>blockIdx.x;</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib<sp/>=<sp/>XBlock.active[ibl];</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"></highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>XBlock.level[ib];</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BL<sp/>=<sp/>XBlock.BotLeft[ib];</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BR<sp/>=<sp/>XBlock.BotRight[ib];</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"></highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ihalo,<sp/>jhalo,<sp/>ibn;</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prolongation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ir,<sp/>jr;</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>ip,<sp/>jp,<sp/>il,<sp/>jl,<sp/>im,<sp/>jm;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jhalo<sp/>=<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/>jhalo<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/>ihalo<sp/>=<sp/>ix;</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/>jr<sp/>=<sp/>blockDim.x<sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"></highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&lt;<sp/>XBlock.level[BL]<sp/>&amp;&amp;<sp/>ix<sp/>&lt;<sp/>(blockDim.x<sp/>/<sp/>2))</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>BL;</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ir<sp/>=<sp/>ix<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wetdryrestriction(XParam.halowidth,<sp/>blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ir,<sp/>jr,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>&lt;<sp/>XBlock.level[BR]<sp/>&amp;&amp;<sp/>ix<sp/>&gt;=<sp/>(blockDim.x<sp/>/<sp/>2))</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibn<sp/>=<sp/>BR;</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ir<sp/>=<sp/>(ix<sp/>-<sp/>(blockDim.x<sp/>/<sp/>2))<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wetdryrestriction(XParam.halowidth,<sp/>blkmemwidth,<sp/>T(XParam.eps),<sp/>ib,<sp/>ibn,<sp/>ihalo,<sp/>jhalo,<sp/>ir,<sp/>jr,<sp/>XEv.h,<sp/>XEv.zs,<sp/>zb);</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"></highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2130"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/ConserveElevation.cu"/>
  </compounddef>
</doxygen>
